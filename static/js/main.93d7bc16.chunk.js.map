{"version":3,"sources":["components/Loader/Dual Ball-0.9s-200px.svg","services/Role/RoleService.js","config/config.js","services/Path/PathService.js","services/App/AppService.js","services/ToolBar/ToolBarService.js","components/ToolBar/ToolBarItem/ToolBarItem.js","components/ToolBar/ToolBarBrandItem/ToolBarBrandItem.js","components/ToolBar/ToolBarLogOutItem/ToolBarLogOutItem.js","components/StatusBar/StatusBar.js","components/ToolBar/ToolBar/ToolBar.js","contexts/UserDetailsContext.js","components/NavigationBreadcrumb/NavigationBreadcrumb.js","components/DefaultPage/DefaultPage.js","components/Panel/Panel.js","handlers/responseHandlers.js","utils/headers.js","services/Api/ApiService.js","handlers/errorHandlers.js","services/Auth/AuthService.js","contexts/PathServiceContext.js","components/RouteWrapper/RouteWrapper.js","components/LoginForm/LoginForm.js","components/ClientCard/ClientCard.js","components/RowDataContainer/RowDataTransformer.js","components/Loader/Loader.js","components/AlertDanger/AlertDanger.js","components/WithDataWrapper/WithDataWrapper.js","components/ClientsPage/ClientsPage.js","components/HomePage/HomePage.js","components/ClientInfo/WithClientInfoWrapper.js","components/ClientInfo/ClientGeneralInfo.js","components/ClientInfo/ClientAddressInfo.js","components/ClientInfo/ClientPaymentInfo.js","components/TooltipWrapper/TooltipWrapper.js","components/ButtonBar/ButtonBar.js","components/AlertSuccess/AlertSuccess.js","components/ClientDetailsForm/ClientDetailsForm.js","components/ClientDetails/ClientDetails.js","components/App/App.js","index.js"],"names":["module","exports","anonymous","_ROLES","admin","manager","isRoleValid","role","Object","values","includes","getUserIcon","userRole","this","faUser","faUserSecret","faUserTie","CLIENT_VERSION","pjson","version","HOME_PAGE","dependencies","react","homepage","APP_NAME","name","HOME_PATH","parts","split","length","_getHomePath","_PATH_DATA","HOME","path","roles","RoleService","CLIENTS","CLIENT","OPERATIONS","WORKERS","CALENDAR","SETTINGS","LOGIN","home","clients","client","operations","workers","calendar","settings","login","breadcrumbs","label","href","id","title","isPathExists","some","it","isPathActive","targetPath","activePath","rootPath","match","toolBarService","getToolBarLogOutItemProps","onLogOut","faIcon","faSignOutAlt","onClick","className","getTopToolBarItems","ids","items","PathService","faHome","faWallet","faBox","faCalendarAlt","filterItemsByIds","getBottomToolBarItems","faCog","forceShowIcon","filter","getToolBarProps","isAuthenticated","userDetails","appInfo","logoutHandler","topItems","bottomItems","logOutItemProps","brandItemProps","appName","toLowerCase","statusBarProps","getLoginFormProps","loginHandler","inputChangeHandler","error","onSubmit","getInitialUserDetails","username","password","isProdEnv","process","ToolBarItem","isActive","to","classNames","icon","ToolBarBrandItem","ToolBarLogOutItem","StatusBar","ToolBar","props","useLocation","pathname","transformToolBarItems","toolBarItems","map","itemProps","key","UserDetailsContext","createContext","NavigationBreadcrumb","transformedItems","i","Breadcrumb","Item","active","linkAs","Link","linkProps","DefaultPage","breadcrumbItems","children","faCheck","Panel","checkResponseStatus","response","ok","Error","statusText","loginResponseHandler","json","then","Auth","writeToken","window","location","catch","console","headers","localStorage","auth","JSON","parse","access_token","pathNames","refreshToken","getClients","_getResource","buildUri","getClient","saveClient","fetchWrapper","method","body","stringify","updateClient","serverUrl","uri","a","init","initCopy","fetch","defaultErrorHandler","handler","call","ApiService","URI_LOGIN","URI_REFRESH_TOKEN","getRole","authObject","anonymousRole","Array","isArray","removeToken","checkIsTokenExists","qs","grant_type","refresh_token","checkAuthEndpoint","PathServiceContext","RouteWrapper","rest","useContext","render","isRoleAppropriate","state","from","defaultProps","LoginForm","recoverPasswordPathname","onInputChange","Form","Group","controlId","Label","Control","type","value","onChange","autoComplete","placeholder","Text","Button","variant","e","preventDefault","ClientCard","shortName","paymentInfo","webSite","phone","email","payerAccountNumber","RowDataTransformer","data","CardComponent","resultArr","dataArrCopy","push","splice","reshapeDataArr","row","Row","col","Col","lg","transformDataArr","Loader","src","loaderIcon","alt","AlertDanger","text","setShow","redirectPath","Alert","onClose","dismissible","Heading","faExclamationCircle","WithDataWrapper","getData","filterData","Component","useState","setData","hasLoaded","setLoaded","hasError","setError","useParams","onSuccess","onError","useEffect","reload","newData","ClientsPage","HomePage","Jumbotron","WithClientInfoWrapper","buildId","postfix","prefix","ClientGeneralInfo","readonly","as","required","disabled","fullName","fax","ClientAddressInfo","countries","countryList","addressString","city","countryISO2code","postcode","ClientPaymentInfo","bankName","sm","bankIdentificationCode","checkingAccountNumber","TooltipWrapper","placement","delay","show","hide","OverlayTrigger","overlay","Tooltip","Math","round","random","ButtonBar","buttons","ButtonGroup","aria-label","btn","tooltip","AlertSuccess","ClientDetailsForm","onMount","modes","edit","create","INITIAL_ERROR_STATE","message","generalInfo","setGeneralInfo","legalAddress","legalAddressInfo","setLegalAddressInfo","mailingAddress","mailingAddressInfo","setMailingAddressInfo","setPaymentInfo","mode","setMode","showAlertSuccess","setShowAlertSuccess","isShowMode","modeName","equals","obj1","obj2","entries","toString","hideAlertDanger","onSubmitWrapper","scrollTo","debug","isEditMode","onCancel","target","object","hasOwnProperty","objectCopy","faPen","faTrashAlt","faSave","faBan","copy","ClientDetails","setTitle","setBreadcrumbItems","breadcrumbItemsCopy","indexOfLastElement","App","AppService","setUserDetails","setAuthenticated","isAuthCheckPerformed","setAuthCheckPerformed","setUserRole","AuthService","Provider","event","newUserDetails","exact","dataArr","sort","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93d7bc16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dual Ball-0.9s-200px.248c6acf.svg\";","import {faUser, faUserSecret, faUserTie} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default {\n    anonymous: () => _ROLES.anonymous,\n    admin: () => _ROLES.admin,\n    manager: () => _ROLES.manager,\n\n    isRoleValid: role =>\n        Object.values(_ROLES).includes(role),\n\n    getUserIcon(userRole) {\n        switch (userRole) {\n            case this.anonymous():\n                return faUser\n            case this.admin():\n                return faUserSecret\n            case this.manager():\n                return faUserTie\n            default: {\n                return faUser\n            }\n        }\n    }\n}\n\nconst _ROLES = {\n    anonymous: 'ROLE_ANONYMOUS',\n    admin: 'ROLE_ADMIN',\n    manager: 'ROLE_MANAGER',\n}","import pjson from '../../package.json';\n\nexport const SERVER_URL = 'http://localhost:8080';\nexport const CLIENT_VERSION = pjson.version;\nexport const REACT_VERSION = pjson.dependencies.react;\nexport const HOME_PAGE = pjson.homepage;\nexport const APP_NAME = pjson.name;\n","import RoleService from \"../Role/RoleService\";\nimport {APP_NAME, HOME_PAGE} from \"../../config/config\";\n\nconst _getHomePath = () => {\n    const parts = HOME_PAGE.split('/');\n    return parts && parts.length > 0 ?\n        parts[parts.length - 1] : APP_NAME\n}\n\nconst HOME_PATH = `/${_getHomePath()}`;\n\nconst _PATH_DATA = {\n    HOME: {\n        path: HOME_PATH,\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n    CLIENTS: {\n        path: HOME_PATH + \"/clients/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CLIENT: {\n        path: HOME_PATH + \"/clients/:id\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    OPERATIONS: {\n        path: HOME_PATH + \"/operations/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    WORKERS: {\n        path: HOME_PATH + \"/workers/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CALENDAR: {\n        path: HOME_PATH + \"/calendar/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager()\n        ]\n    },\n    SETTINGS: {\n        path: HOME_PATH + \"/settings\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    LOGIN: {\n        path: HOME_PATH + \"/login\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n}\n\nconst _isPathExists = path =>\n    Object.values(_PATH_DATA).some(it => it.path === path)\n\n\nexport default {\n    home: () => _PATH_DATA.HOME.path,\n    clients: () => _PATH_DATA.CLIENTS.path,\n    client: () => _PATH_DATA.CLIENT.path,\n    operations: () => _PATH_DATA.OPERATIONS.path,\n    workers: () => _PATH_DATA.WORKERS.path,\n    calendar: () => _PATH_DATA.WORKERS.path,\n    settings: () => _PATH_DATA.SETTINGS.path,\n    login: () => _PATH_DATA.LOGIN.path,\n\n    roles: () => {\n        return {\n            home: () => _PATH_DATA.HOME.roles,\n            clients: () => _PATH_DATA.CLIENTS.roles,\n            client: () => _PATH_DATA.CLIENT.roles,\n            operations: () => _PATH_DATA.OPERATIONS.roles,\n            workers: () => _PATH_DATA.WORKERS.roles,\n            calendar: () => _PATH_DATA.WORKERS.roles,\n            settings: () => _PATH_DATA.SETTINGS.roles,\n            login: () => _PATH_DATA.LOGIN.roles,\n        }\n    },\n\n    breadcrumbs: () => {\n        return {\n            home: () => {\n                return {\n                    label: 'Главная',\n                    href: _PATH_DATA.HOME.path,\n                }\n            },\n            clients: () => {\n                return {\n                    label: 'Клиенты',\n                    href: _PATH_DATA.CLIENTS.path,\n                }\n            },\n            client: (id, title) => {\n                return {\n                    label: title,\n                    href: _PATH_DATA.HOME.path + id,\n                }\n            },\n            operations: () => {\n                return {\n                    label: 'Операции',\n                    href: _PATH_DATA.OPERATIONS.path,\n                }\n            },\n            workers: () => {\n                return {\n                    label: 'Сотрудники',\n                    href: _PATH_DATA.WORKERS.path,\n                }\n            },\n            calendar: () => {\n                return {\n                    label: 'Календарь',\n                    href: _PATH_DATA.CALENDAR.path,\n                }\n            },\n            settings: () => {\n                return {\n                    label: 'Настройки',\n                    href: _PATH_DATA.SETTINGS.path,\n                }\n            }\n        }\n    },\n\n    isPathExists: _isPathExists,\n\n    isPathActive: (targetPath, activePath, rootPath = HOME_PATH) => {\n        const match = activePath.match(targetPath)\n        return match && (activePath === rootPath ? true : match[0] !== rootPath)\n    },\n}","import PathService from \"../Path/PathService\";\nimport ToolBarService from \"../ToolBar/ToolBarService\";\nimport RoleService from \"../Role/RoleService\";\n\nconst toolBarService = new ToolBarService();\n\nexport default {\n    getToolBarProps(isAuthenticated, userDetails, appInfo, logoutHandler) {\n        const topItems = toolBarService.getTopToolBarItems(userDetails.role)\n        const bottomItems = toolBarService.getBottomToolBarItems(userDetails.role)\n        const logOutItemProps = toolBarService.getToolBarLogOutItemProps(logoutHandler)\n\n        return {\n            brandItemProps: {\n                appName: appInfo.name.toLowerCase(),\n            },\n            logOutItemProps,\n            topItems,\n            bottomItems,\n            isAuthenticated,\n            statusBarProps: {\n                appInfo,\n            },\n            isPathActive: PathService.isPathActive\n        }\n    },\n\n    getLoginFormProps(userDetails, loginHandler, inputChangeHandler) {\n        return {\n            userDetails: userDetails,\n            error: null,\n            onSubmit: loginHandler,\n            inputChangeHandler: inputChangeHandler\n        }\n    },\n\n    getInitialUserDetails() {\n        return {\n            username: '',\n            password: '',\n            role: RoleService.anonymous()\n        }\n    },\n\n    isProdEnv() {\n        return !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\n    }\n}","import {\n    faBox,\n    faCalendarAlt,\n    faCog,\n    faHome,\n    faSignOutAlt,\n    faUserTie,\n    faWallet\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PathService from \"../Path/PathService\";\nimport RoleService from \"../Role/RoleService\";\n\nexport default class ToolBarService {\n    getToolBarLogOutItemProps = (onLogOut, label = 'Выйти') => {\n        return {\n            id: 'logout',\n            label,\n            faIcon: faSignOutAlt,\n            onClick: onLogOut,\n            className: 'text-danger',\n        }\n    };\n\n    getTopToolBarItems = (role) => {\n        const ids = {\n            HOME: 'home',\n            CLIENTS: 'clients',\n            OPERATIONS: 'operations',\n            WORKERS: 'workers',\n            CALENDAR: 'calendar',\n        }\n\n        const items = [\n            {\n                id: ids.HOME,\n                label: 'Главная',\n                href: PathService.home(),\n                faIcon: faHome,\n            },\n            {\n                id: ids.CLIENTS,\n                label: 'Клиенты',\n                href: PathService.clients(),\n                faIcon: faWallet,\n            },\n            {\n                id: ids.OPERATIONS,\n                label: 'Операции',\n                href: PathService.operations(),\n                faIcon: faBox,\n            },\n            {\n                id: ids.WORKERS,\n                label: 'Сотрудники',\n                href: PathService.workers(),\n                faIcon: faUserTie,\n            },\n            {\n                id: ids.CALENDAR,\n                label: 'Календарь',\n                href: PathService.calendar(),\n                faIcon: faCalendarAlt,\n            },\n        ];\n\n        switch (role) {\n            case RoleService.admin():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.OPERATIONS,\n                    ids.WORKERS)\n            case RoleService.manager():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.CALENDAR,\n                    ids.OPERATIONS)\n            case RoleService.anonymous():\n                return this.filterItemsByIds(items,\n                    ids.HOME)\n            default:\n                return []\n        }\n    }\n\n    getBottomToolBarItems = (role) => {\n        return role ? [\n            {\n                id: 'settings',\n                label: 'Настройки',\n                href: PathService.settings(),\n                faIcon: faCog,\n                forceShowIcon: true,\n            },\n        ] : []\n    }\n\n    filterItemsByIds = (items = [], ...ids) => {\n        return items.filter(it => ids.includes(it.id))\n    }\n}","import React from \"react\";\n\nimport classNames from \"classnames\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport \"./ToolBarItem.css\"\nimport {Link} from \"react-router-dom\";\n\nconst ToolBarItem = ({href, label, isActive, faIcon, forceShowIcon}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', {\n                'active': isActive\n            }\n        )\n\n    return (\n        <Link to={href} className={getClassNames()}>\n            <FontAwesomeIcon icon={faIcon}/>{label}\n        </Link>\n    )\n}\n\nexport default ToolBarItem;","import React from \"react\";\nimport \"./ToolBarBrandItem.css\";\nimport classNames from \"classnames\";\n\nconst ToolBarBrandItem = ({appName = 'App'}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'brand', 'noselect')\n\n    return (\n        <div className={getClassNames()}>\n            <span>{appName}</span>\n        </div>\n    )\n};\n\nexport default ToolBarBrandItem;","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ToolBarLogOutItem.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst ToolBarLogOutItem = ({label, faIcon, onClick, className}) => {\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'tool-bar-log-out-item', ...className)\n\n    return (\n        <div className={getClassNames()} onClick={onClick}>\n            <FontAwesomeIcon icon={faIcon}/> {label}\n        </div>\n    )\n};\n\nexport default ToolBarLogOutItem","import React from \"react\";\nimport \"./StatusBar.css\";\n\nconst StatusBar = ({appInfo}) => {\n    return (\n        <div className=\"status-bar\">\n            <div className=\"left\">\n                v. {appInfo.version}\n            </div>\n        </div>\n    )\n};\n\nexport default StatusBar","import React from \"react\";\nimport \"./ToolBar.css\"\nimport PropTypes from 'prop-types';\nimport ToolBarItem from \"../ToolBarItem/ToolBarItem\";\nimport ToolBarBrandItem from \"../ToolBarBrandItem/ToolBarBrandItem\";\nimport ToolBarLogOutItem from \"../ToolBarLogOutItem/ToolBarLogOutItem\";\nimport {useLocation} from \"react-router-dom\";\nimport StatusBar from \"../../StatusBar/StatusBar\";\n\nconst ToolBar = (props) => {\n\n    const {\n        brandItemProps,\n        logOutItemProps,\n        statusBarProps,\n        topItems,\n        bottomItems,\n        isAuthenticated,\n        isPathActive,\n    } = props;\n\n    const activePath = useLocation().pathname;\n\n    const transformToolBarItems = (toolBarItems) =>\n        toolBarItems.map(itemProps =>\n            <ToolBarItem key={itemProps.id} {...itemProps} isActive={isPathActive(itemProps.href, activePath)}/>\n        );\n\n    return (\n        <div className=\"vertical-menu shadow\">\n\n            <ToolBarBrandItem {...brandItemProps} />\n            {\n                transformToolBarItems(topItems)\n            }\n            <div className=\"bottom-container\">\n                {\n                    transformToolBarItems(bottomItems)\n                }\n                {\n                    isAuthenticated ? <ToolBarLogOutItem {...logOutItemProps}/> : null\n                }\n                <StatusBar {...statusBarProps}/>\n            </div>\n        </div>\n    );\n};\n\nToolBar.propTypes = {\n    brandItemProps: PropTypes.object,\n    logOutItemProps: PropTypes.object,\n    isAuthenticated: PropTypes.bool,\n    topItems: PropTypes.arrayOf(PropTypes.object),\n    bottomItems: PropTypes.arrayOf(PropTypes.object),\n    appInfo: PropTypes.object,\n}\n\nexport default ToolBar;","import {createContext} from \"react\";\nimport RoleService from \"../services/Role/RoleService\";\n\nexport const UserDetailsContext = createContext({\n    username: '',\n    role: RoleService.anonymous(),\n});","import React from \"react\";\nimport {Breadcrumb} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst NavigationBreadcrumb = ({items = []}) => {\n\n    if (!items || items.length === 0) {\n        return null\n    }\n\n    const transformedItems = items.map((it, i) => (\n        <Breadcrumb.Item active={i === items.length - 1}\n                         key={i}\n                         linkAs={Link}\n                         linkProps={{to: it.href}}>{it.label}</Breadcrumb.Item>\n    ))\n\n    return (\n        <Breadcrumb>\n            {\n                transformedItems\n            }\n        </Breadcrumb>\n    )\n}\n\nexport default NavigationBreadcrumb","import React from \"react\";\n\nimport \"./DefaultPage.css\"\nimport NavigationBreadcrumb from \"../NavigationBreadcrumb/NavigationBreadcrumb\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\n\nconst DefaultPage = ({title, icon, breadcrumbItems = [], children}) => {\n    return (\n        <div className=\"default-page\">\n\n            {\n                title ? (\n                    <div className=\"title\">\n                        <h2>\n                            <span className=\"text-primary\">\n                                <FontAwesomeIcon icon={icon || faCheck}/>\n                            </span> {title}\n                        </h2>\n                    </div>\n                ) : null\n            }\n\n            {\n                breadcrumbItems.length ? (\n                    <div className=\"mt-4\">\n                        <NavigationBreadcrumb items={breadcrumbItems}/>\n                    </div>\n                ) : null\n            }\n\n            {children}\n        </div>\n    )\n};\n\nexport default DefaultPage","import React from \"react\";\n\nimport \"./Panel.css\";\n\nconst Panel = ({children}) => {\n    return (\n        <div className=\"panel\">\n            {\n                children\n            }\n        </div>\n    )\n}\n\nexport default Panel;","import Auth from '../services/Auth/AuthService';\nimport PathService from \"../services/Path/PathService\";\n\nexport const checkResponseStatus = response => {\n    if (response.ok) {\n        return response\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n};\n\nexport const loginResponseHandler = response => {\n    response.json()\n        .then(json => {\n            Auth.writeToken(json);\n            window.location.pathname = PathService.home()\n        })\n        .catch(console.error)\n};","export const headers = () => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.auth ? JSON.parse(localStorage.auth).access_token : null}`\n    }\n}","import {SERVER_URL} from \"../../config/config\";\nimport {headers} from \"../../utils/headers\";\nimport {checkResponseStatus} from \"../../handlers/responseHandlers\";\n\nexport default {\n    pathNames() {\n        return {\n            login: '/api/login',\n            refreshToken: '/oauth/access_token'\n        }\n    },\n\n    getClients() {\n        return _getResource(buildUri('/api/client'))\n    },\n\n    getClient(id) {\n        return _getResource(buildUri(`/api/client/${id}`))\n    },\n\n    saveClient(client) {\n        return fetchWrapper(buildUri('/api/client/'), {\n            method: 'post',\n            body: JSON.stringify(client)\n        }).then(checkResponseStatus)\n    },\n\n    updateClient(id, client) {\n        return fetchWrapper(buildUri(`/api/client/${id}`), {\n            method: 'put',\n            body: JSON.stringify(client)\n        }).then(checkResponseStatus)\n    }\n};\n\nexport const buildUri = (path, serverUrl = SERVER_URL) => {\n    return `${serverUrl}${path}`\n};\n\nexport const fetchWrapper = async function (uri, init = {}) {\n    const initCopy = {...init};\n    initCopy.headers = {...initCopy.headers, ...headers()}\n    return fetch(uri, initCopy).then(checkResponseStatus)\n}\n\nconst _getResource = async (uri) => {\n    try {\n        const response = await fetchWrapper(uri)\n\n        return response.json()\n    } catch (e) {\n        throw e\n    }\n};","export const defaultErrorHandler = (error, handler) => {\n    console.error(error);\n\n    if (handler) {\n        handler.call();\n    }\n};","import {checkResponseStatus, loginResponseHandler} from \"../../handlers/responseHandlers\";\nimport * as qs from \"qs\";\nimport ApiService, {buildUri, fetchWrapper} from \"../Api/ApiService\";\nimport {defaultErrorHandler} from \"../../handlers/errorHandlers\";\nimport RoleService from \"../Role/RoleService\";\n\nconst {login: URI_LOGIN, refreshToken: URI_REFRESH_TOKEN} = ApiService.pathNames()\n\nexport default {\n\n    getRole() {\n        const authObject = JSON.parse(localStorage.auth);\n        const anonymousRole = RoleService.anonymous()\n        if (authObject && authObject.roles) {\n            const {roles} = authObject;\n            if (Array.isArray(roles) && roles.length > 0) {\n                return RoleService.isRoleValid(roles[0]) ? roles[0] : anonymousRole;\n            }\n        }\n\n        return null;\n    },\n\n    login(userDetails) {\n        fetch(buildUri(URI_LOGIN), {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }).then(checkResponseStatus)\n            .then(loginResponseHandler)\n            .catch(defaultErrorHandler);\n    },\n\n    writeToken(auth) {\n        localStorage.auth = JSON.stringify(auth);\n    },\n\n    removeToken() {\n        delete localStorage.auth;\n    },\n\n    checkIsTokenExists() {\n        return !!localStorage.auth\n    },\n\n    refreshToken() {\n        return fetch(buildUri(URI_REFRESH_TOKEN), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            body: qs.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: JSON.parse(localStorage.auth).refresh_token\n            })\n        }).then(checkResponseStatus)\n            .then(this.writeToken)\n            .catch(() => {\n                throw new Error(\"Unable to refresh!\")\n            })\n    },\n\n    checkAuthEndpoint() {\n        return fetchWrapper(buildUri('/api/checkAuth'))\n    }\n};","import {createContext} from \"react\";\n\nexport const PathServiceContext = createContext(null)","import React, {useContext} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst RouteWrapper = ({children, roles, ...rest}) => {\n\n    const userDetails = useContext(UserDetailsContext);\n    const PathService = useContext(PathServiceContext);\n\n    const isRoleAppropriate = (role, roles) => roles.includes(role);\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isRoleAppropriate(userDetails.role, roles) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: PathService.login(),\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n\n};\n\nexport default RouteWrapper\n\nRouteWrapper.defaultProps = {\n    roles: [],\n}","import React from \"react\";\nimport \"./LoginForm.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const {\n        title,\n        onSubmit,\n        recoverPasswordPathname,\n        userDetails,\n        onInputChange\n    } = props;\n\n    return (\n        <DefaultPage>\n            <div className=\"login-form shadow\">\n\n                <div className=\"title\">\n                    <h2>{title}</h2>\n                </div>\n\n                <Form onSubmit={onSubmit}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Введите имя пользователя:</Form.Label>\n                        <Form.Control type=\"text\"\n                                      name=\"username\"\n                                      value={userDetails.username}\n                                      onChange={onInputChange}\n                                      autoComplete=\"username\"\n                                      placeholder=\"Имя пользователя\"/>\n                        <Form.Text className=\"text-muted\">\n                            Мы заботимся о конфеденциальности Ваших данных.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Введите пароль:</Form.Label>\n                        <Form.Control type=\"password\"\n                                      name=\"password\"\n                                      value={userDetails.password}\n                                      onChange={onInputChange}\n                                      autoComplete=\"current-password\"\n                                      placeholder=\"Пароль\"/>\n                        <Form.Text>\n                            <Link to={recoverPasswordPathname}>Забыли пароль?</Link>\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Подтвердить\n                    </Button>\n                </Form>\n            </div>\n        </DefaultPage>\n    )\n}\n\nLoginForm.defaultProps = {\n    title: 'Login form',\n    onSubmit: (e) => e.preventDefault(),\n    recoverPasswordPathname: '/recoverPassword',\n    userDetails: {\n        username: '',\n        password: ''\n    },\n    onInputChange: () => {\n    }\n}\n\nexport default LoginForm","import React from \"react\";\nimport \"./ClientCard.css\";\nimport classNames from \"classnames\"\nimport {Link} from \"react-router-dom\";\n\nconst ClientCard = (props) => {\n    const {\n        id,\n        shortName,\n        paymentInfo = {},\n        webSite,\n        phone,\n        email,\n        isActive\n    } = props\n\n    const className = classNames('client-card', 'shadow', {\n        'active': isActive\n    })\n\n    return (\n        <div className={className}>\n            <div className=\"title\">\n                <Link to={`${id}`}>\n                    <h3>{shortName}</h3>\n                </Link>\n            </div>\n            <hr/>\n            <div className=\"body\">\n                <div className=\"item\">\n                    УНП: {paymentInfo.payerAccountNumber}\n                </div>\n                <div className=\"item\">\n                    Тел.: <a href={`tel:${phone}`}>{phone}</a>\n                </div>\n                <div className=\"item\">\n                    E-mail: <a href={`mailto:${email}`}>{email}</a>\n                </div>\n                <div className=\"item\">\n                    Веб-сайт: <a href={webSite}>{webSite}</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClientCard\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nconst RowDataTransformer = ({data = [], CardComponent}) => {\n\n    const reshapeDataArr = (data) => {\n        let resultArr = [];\n\n        if (Array.isArray(data)) {\n            let dataArrCopy = [...data]\n            while (dataArrCopy.length) {\n                resultArr.push(dataArrCopy.splice(0, 3))\n            }\n        }\n\n        return resultArr;\n    }\n\n    const transformDataArr = (data) => {\n        return reshapeDataArr(data).map((row, i) => (\n            <Row key={i}>\n                {\n                    row.map((col, i) => (\n                        <Col key={i} lg={4}>\n                            <CardComponent key={col.id} {...col}/>\n                        </Col>\n                    ))\n                }\n            </Row>\n        ))\n    };\n\n    return (\n        <>{transformDataArr(data)}</>\n    )\n};\n\nexport default RowDataTransformer","import React from \"react\";\n\nimport \"./Loader.css\"\nimport loaderIcon from \"./Dual Ball-0.9s-200px.svg\"\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <img src={loaderIcon} alt=\"loading..\"/>\n        </div>\n    )\n};\n\nexport default Loader","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {faExclamationCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst AlertDanger = ({title, text, setShow, redirectPath}) => {\n    return (\n        <Alert variant=\"danger\"\n               onClose={() => setShow(false)}\n               dismissible>\n            <Alert.Heading>\n                <FontAwesomeIcon icon={faExclamationCircle}/> {title}\n            </Alert.Heading>\n            <div>\n                {\n                    text\n                }\n                {\n                    redirectPath ?\n                        <>\n                            <hr/>\n                            <div>\n                                Вы можете вернуться на <Alert.Link\n                                href={redirectPath}>главную</Alert.Link> страницу.\n                            </div>\n                        </> : null\n                }\n            </div>\n        </Alert>\n    );\n}\n\nAlertDanger.defaultProps = {\n    title: \"Во время последней операции произошла ошибка.\",\n    text: 'Наша команда уже работает над решением возникшей проблемы.',\n    redirectPath: '/'\n}\n\nexport default AlertDanger","import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport AlertDanger from \"../AlertDanger/AlertDanger\";\n\nconst WithDataWrapper = (props) => {\n\n    const {getData, filterData, Component} = props\n\n    const [data, setData] = useState(null)\n    const [hasLoaded, setLoaded] = useState(false)\n    const [hasError, setError] = useState(false)\n\n    const {id} = useParams()\n\n    const onSuccess = (data) => {\n        setLoaded(true)\n        setError(false)\n        setData(data)\n    }\n\n    const onError = (error) => {\n        console.error(error)\n        setLoaded(true)\n        setError(true)\n    }\n\n    const getDataWrapper = () => {\n        if (id) {\n            getData(id)\n                .then(onSuccess)\n                .catch(onError)\n        } else {\n            getData()\n                .then(onSuccess)\n                .catch(onError)\n        }\n    }\n\n    const reload = (newData) => {\n        if (newData) {\n            setData(newData)\n        } else {\n            getDataWrapper()\n        }\n    }\n\n    useEffect(() => {\n        const onSuccess = (data) => {\n            setLoaded(true)\n            setError(false)\n            setData(data)\n        }\n\n        const onError = (error) => {\n            console.error(error)\n            setLoaded(true)\n            setError(true)\n        }\n\n        if (id) {\n            getData(id)\n                .then(onSuccess)\n                .catch(onError)\n        } else {\n            getData()\n                .then(onSuccess)\n                .catch(onError)\n        }\n\n    }, [getData, id])\n\n    if (!hasLoaded || !data) {\n        return <Loader/>\n    }\n\n    if (hasError) {\n        return <AlertDanger/>\n    }\n\n    return (\n        <Component {...props}\n                   reload={reload}\n                   data={filterData(data)}/>\n    )\n}\n\nWithDataWrapper.propTypes = {\n    getData: PropTypes.func,\n    filterData: PropTypes.func,\n    Component: PropTypes.elementType\n}\n\nWithDataWrapper.defaultProps = {\n    filterData: (data) => data\n}\n\nexport default WithDataWrapper;\n\n","import React, {useContext} from \"react\";\nimport \"./ClientsPage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport ClientCard from \"../ClientCard/ClientCard\";\nimport RowDataTransformer from \"../RowDataContainer/RowDataTransformer\";\nimport PropTypes from \"prop-types\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faWallet} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ClientsPage = (props) => {\n    const {\n        title,\n        filterData,\n        getData\n    } = props\n\n    const PathService = useContext(PathServiceContext)\n\n    return (\n        <DefaultPage title={title}\n                     icon={faWallet}\n                     breadcrumbItems={[\n                         PathService.breadcrumbs().home(),\n                         PathService.breadcrumbs().clients(),\n                     ]}>\n            <div className=\"clients-page\">\n\n                <WithDataWrapper\n                    getData={getData}\n                    filterData={filterData}\n                    Component={RowDataTransformer}\n                    CardComponent={ClientCard}\n                />\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nClientsPage.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n}\n\nClientsPage.defaultProps = {\n    title: '',\n    data: [],\n}\n\nexport default ClientsPage\n\n\n","import React, {useContext} from \"react\";\nimport \"./HomePage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faHome} from \"@fortawesome/free-solid-svg-icons\";\nimport {Jumbotron} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst HomePage = ({title}) => {\n    const PathService = useContext(PathServiceContext);\n\n    return (\n        <DefaultPage title={title}\n                     icon={faHome}\n                     breadcrumbItems={[PathService.breadcrumbs().home()]}>\n            <div className=\"home-page\">\n                <div className=\"text-light\">\n                    <Jumbotron>\n                        <h1>Добро пожаловать!</h1>\n                        <p>\n                            This is a simple hero unit, a simple jumbotron-style component for calling\n                            extra attention to featured content or information.\n                        </p>\n                        <p>\n                            <Link className=\"btn btn-lg btn-success\" to={PathService.login()}>Войти</Link>\n                        </p>\n                    </Jumbotron>\n                </div>\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default HomePage","import React from \"react\";\nimport \"./ClientInfo.css\";\nimport Loader from \"../Loader/Loader\";\n\nconst WithClientInfoWrapper = (props) => {\n    const {id = '', data, title = '', Component} = props;\n    const buildId = (postfix, prefix = id) => prefix + postfix;\n\n    if (!data) {\n        return <Loader/>\n    }\n\n    return (\n        <div className=\"client-info\">\n            <div className=\"title\">\n                <h4>\n                    {title}\n                </h4>\n            </div>\n            <Component buildId={buildId} {...props}/>\n        </div>\n    )\n}\n\nexport default WithClientInfoWrapper","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\n\nconst ClientGeneralInfo = ({data, readonly, onInputChange}) => {\n    return (\n        <div className=\"client-general-info\">\n            <Form.Row>\n                <Form.Group as={Col} lg={4} controlId=\"shortName\">\n                    <Form.Label>Краткое наименование</Form.Label>\n                    <Form.Control name=\"shortName\"\n                                  required\n                                  value={data.shortName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите краткое наименование\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"fullName\">\n                    <Form.Label>Полное наименование</Form.Label>\n                    <Form.Control name=\"fullName\"\n                                  required\n                                  value={data.fullName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите полное наименование\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name=\"email\"\n                                  value={data.email}\n                                  disabled={readonly}\n                                  type=\"email\"\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите email\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"phone\">\n                    <Form.Label>Телефон</Form.Label>\n                    <Form.Control name=\"phone\"\n                                  required\n                                  value={data.phone}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Телефон\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"fax\">\n                    <Form.Label>Факс</Form.Label>\n                    <Form.Control name=\"fax\"\n                                  value={data.fax}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Факс\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientGeneralInfo","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\nimport countryList from \"react-select-country-list\";\n\nconst ClientAddressInfo = ({data, buildId, onInputChange, readonly}) => {\n    const countries = countryList().getData() || []\n\n    return (\n        <div className=\"client-address-info\">\n            <Form.Group controlId={buildId(\"addressString\")}>\n                <Form.Label>Адрес</Form.Label>\n                <Form.Control\n                    name=\"addressString\"\n                    required\n                    value={data.addressString}\n                    disabled={readonly}\n                    onChange={onInputChange}\n                    placeholder=\"Введите адрес\"/>\n            </Form.Group>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId={buildId(\"city\")}>\n                    <Form.Label>Город</Form.Label>\n                    <Form.Control\n                        name=\"city\"\n                        value={data.city}\n                        required\n                        disabled={readonly}\n                        onChange={onInputChange}\n                        placeholder=\"Введите город\"\n                    />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId={buildId(\"countryISO2code\")}>\n                    <Form.Label>Страна</Form.Label>\n                    <Form.Control as=\"select\"\n                                  required\n                                  name=\"countryISO2code\"\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  value={data.countryISO2code}>\n                        {\n                            countries.map((it, i) => (\n                                <option key={i} value={it.value}>{it.label}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={3} controlId={buildId(\"postcode\")}>\n                    <Form.Label>Индекс</Form.Label>\n                    <Form.Control\n                        name=\"postcode\"\n                        required\n                        value={data.postcode}\n                        disabled={readonly}\n                        onChange={onInputChange}\n                        placeholder=\"Индекс\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientAddressInfo","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\n\nconst ClientPaymentInfo = ({data, onInputChange, readonly}) => {\n    return (\n        <div className=\"client-payment-info\">\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"bankName\">\n                    <Form.Label>Наименование банка</Form.Label>\n                    <Form.Control name=\"bankName\"\n                                  required\n                                  value={data.bankName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите наименование банка\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={6} sm={12} controlId=\"bankIdentificationCode\">\n                    <Form.Label>Банковский Идентификационный Код (БИК)</Form.Label>\n                    <Form.Control name=\"bankIdentificationCode\"\n                                  required\n                                  value={data.bankIdentificationCode}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите БИК\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"checkingAccountNumber\">\n                    <Form.Label>Рассчетный счёт</Form.Label>\n                    <Form.Control name=\"checkingAccountNumber\"\n                                  required\n                                  value={data.checkingAccountNumber}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите рассчетный счёт\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={6} sm={12} controlId=\"payerAccountNumber\">\n                    <Form.Label>Уникальный Номер Плательщика (УНП)</Form.Label>\n                    <Form.Control name=\"payerAccountNumber\"\n                                  required\n                                  value={data.payerAccountNumber}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите УНП\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientPaymentInfo","import React from \"react\";\nimport {OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nconst TooltipWrapper = ({id, label, placement = 'top', delay = {show: 50, hide: 50}, children}) => {\n    const generateRandomId = () => {\n        return Math.round(Math.random() * 10)\n    }\n\n    if (!label) {\n        return children\n    }\n\n    return (\n        <OverlayTrigger\n            placement={placement}\n            delay={delay}\n            overlay={\n                <Tooltip id={id || generateRandomId()}>\n                    {label}\n                </Tooltip>\n            }>\n            {\n                children\n            }\n        </OverlayTrigger>\n    );\n}\n\nexport default TooltipWrapper","import React from \"react\";\nimport {Button, ButtonGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst ButtonBar = ({buttons}) => {\n\n    return (\n        <div className=\"float-right\">\n            <ButtonGroup aria-label=\"Basic example\">\n                {\n                    buttons.map(btn => (\n                        <TooltipWrapper key={btn.id} label={btn.tooltip}>\n                            <Button {...btn}>\n                                <FontAwesomeIcon icon={btn.icon}/> {btn.label}\n                            </Button>\n                        </TooltipWrapper>\n                    ))\n                }\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default ButtonBar","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\n\nconst AlertSuccess = ({title, setShow}) => {\n    return (\n        <Alert variant=\"success\"\n               onClose={() => setShow(false)}\n               dismissible>\n            <Alert.Heading>\n                <FontAwesomeIcon icon={faCheck}/> {title}\n            </Alert.Heading>\n        </Alert>\n    )\n}\n\nexport default AlertSuccess","import React, {useEffect, useState} from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {faBan, faPen, faSave, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport WithClientInfoWrapper from \"../ClientInfo/WithClientInfoWrapper\";\nimport ClientGeneralInfo from \"../ClientInfo/ClientGeneralInfo\";\nimport ClientAddressInfo from \"../ClientInfo/ClientAddressInfo\";\nimport ClientPaymentInfo from \"../ClientInfo/ClientPaymentInfo\";\nimport ButtonBar from \"../ButtonBar/ButtonBar\";\nimport ApiService from \"../../services/Api/ApiService\";\nimport AlertSuccess from \"../AlertSuccess/AlertSuccess\";\nimport AlertDanger from \"../AlertDanger/AlertDanger\";\n\nconst ClientDetailsForm = ({data, reload, onMount}) => {\n\n    const modes = {\n        show: 'show',\n        edit: 'edit',\n        create: 'create'\n    }\n\n    const INITIAL_ERROR_STATE = {hasError: false, message: ''}\n\n    const [generalInfo, setGeneralInfo] = useState(data)\n    const [legalAddressInfo, setLegalAddressInfo] = useState(data.legalAddress)\n    const [mailingAddressInfo, setMailingAddressInfo] = useState(data.mailingAddress)\n    const [paymentInfo, setPaymentInfo] = useState(data.paymentInfo)\n    const [mode, setMode] = useState(modes.show)\n    const [showAlertSuccess, setShowAlertSuccess] = useState(false)\n    const [error, setError] = useState(INITIAL_ERROR_STATE)\n\n    useEffect(() => {\n        onMount(data)\n    }, [onMount, data])\n\n    const isShowMode = (modeName) => modes[modeName] && modes[modeName] === modes.show\n    const isEditMode = (modeName) => modes[modeName] && modes[modeName] === modes.edit\n    const isCreateMode = (modeName) => modes[modeName] && modes[modeName] === modes.create\n\n    const equals = (obj1, obj2) => {\n        return Object.entries(obj1).toString() === Object.entries(obj2).toString()\n    }\n\n    const hideAlertDanger = () => {\n        setError(INITIAL_ERROR_STATE)\n    }\n\n    const clientNotChanged = () =>\n        equals(data, generalInfo) &&\n        equals(data.legalAddress, legalAddressInfo) &&\n        equals(data.mailingAddress, mailingAddressInfo) &&\n        equals(data.paymentInfo, paymentInfo)\n\n\n    const onSubmitWrapper = (e) => {\n        e.preventDefault()\n\n        const onSuccess = (response) => {\n            hideAlertDanger()\n            setShowAlertSuccess(true)\n            setMode(modes.show)\n            window.scrollTo(0, 0)\n            response.json()\n                .then(reload)\n        }\n\n        const onError = (e) => {\n            console.error(e)\n            if (e.response) {\n                e.response.json()\n                    .then(json => {\n                        console.error(json.message);\n                        setError({\n                            hasError: true,\n                            message: json.message\n                        })\n                    })\n                    .catch(console.error)\n            }\n            setShowAlertSuccess(false)\n        }\n\n        if (!isShowMode(mode)) {\n            const client = {\n                ...generalInfo,\n                legalAddress: legalAddressInfo,\n                mailingAddress: mailingAddressInfo,\n                paymentInfo: paymentInfo\n            }\n\n            if (isCreateMode(mode)) {\n                console.debug('post')\n                ApiService.saveClient(client)\n                    .then(onSuccess)\n                    .catch(onError)\n\n            } else if (isEditMode(mode)) {\n                ApiService.updateClient(client.id, client)\n                    .then(onSuccess)\n                    .catch(onError)\n            }\n        }\n    }\n\n    const getButtons = () => {\n        if (isShowMode(mode)) {\n            return [\n                {\n                    id: 'edit',\n                    variant: 'outline-primary',\n                    type: 'button',\n                    icon: faPen,\n                    tooltip: '',\n                    label: 'Изменить',\n                    onClick: () => setMode(modes.edit),\n                },\n                {\n                    id: 'delete',\n                    variant: 'outline-danger',\n                    type: 'button',\n                    icon: faTrashAlt,\n                    tooltip: 'Удалить',\n                    label: '',\n                },\n            ]\n        } else {\n            return [\n                {\n                    id: 'edit',\n                    variant: \"primary\",\n                    type: \"submit\",\n                    icon: faSave,\n                    disabled: clientNotChanged(),\n                    tooltip: '',\n                    label: 'Сохранить',\n                },\n                {\n                    id: 'cancel',\n                    variant: \"outline-secondary\",\n                    type: \"reset\",\n                    icon: faBan,\n                    label: '',\n                    tooltip: 'Отменить',\n                    onClick: onCancel,\n                },\n            ]\n        }\n    }\n\n    const onCancel = () => {\n        setMode(modes.show)\n        setGeneralInfo(data)\n        setLegalAddressInfo(data.legalAddress)\n        setMailingAddressInfo(data.mailingAddress)\n        setPaymentInfo(data.paymentInfo)\n        setShowAlertSuccess(false)\n        hideAlertDanger()\n    }\n\n    const onInputChange = (target, object) => {\n        if (object.hasOwnProperty(target.name)) {\n            const objectCopy = {...object}\n            objectCopy[target.name] = target.value\n            return objectCopy\n        }\n        console.error('Unknown property', target.name, object)\n    }\n\n    const onGeneralInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, generalInfo);\n        if (copy) {\n            setGeneralInfo(copy)\n        }\n    }\n\n    const onLegalAddressInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, legalAddressInfo);\n        if (copy) {\n            setLegalAddressInfo(copy)\n        }\n    }\n\n    const onMailingAddressInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, mailingAddressInfo);\n        if (copy) {\n            setMailingAddressInfo(copy)\n        }\n    }\n\n    const onPaymentInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, paymentInfo);\n        if (copy) {\n            setPaymentInfo(copy)\n        }\n    }\n\n    const readonly = isShowMode(mode);\n\n    return (\n        <div className=\"client-details-view\">\n\n            {\n                showAlertSuccess ? (\n                    <AlertSuccess title=\"Данные успешно сохранены!\"\n                                  setShow={setShowAlertSuccess}/>\n                ) : null\n            }\n\n            {\n                error.hasError ? (\n                    <AlertDanger text={error.message}\n                                 setShow={hideAlertDanger}/>\n                ) : null\n            }\n\n            <Form onSubmit={(e) => onSubmitWrapper(e)}>\n                <ButtonBar buttons={getButtons()}/>\n\n                <WithClientInfoWrapper\n                    title=\"Общая информация:\"\n                    data={generalInfo}\n                    readonly={readonly}\n                    onInputChange={onGeneralInfoInputChange}\n                    Component={ClientGeneralInfo}\n                />\n\n                <Row>\n                    <Col>\n                        <WithClientInfoWrapper\n                            title=\"Юридический адрес:\"\n                            id=\"legalAddress\"\n                            data={legalAddressInfo}\n                            readonly={readonly}\n                            onInputChange={onLegalAddressInfoInputChange}\n                            Component={ClientAddressInfo}\n                        />\n                    </Col>\n                    <Col>\n                        <WithClientInfoWrapper\n                            title=\"Почтовый адрес:\"\n                            id=\"mailingAddress\"\n                            data={mailingAddressInfo}\n                            readonly={readonly}\n                            onInputChange={onMailingAddressInfoInputChange}\n                            Component={ClientAddressInfo}\n                        />\n                    </Col>\n                </Row>\n\n                <WithClientInfoWrapper\n                    title=\"Платежная информация:\"\n                    id=\"paymentInfo\"\n                    data={paymentInfo}\n                    readonly={readonly}\n                    onInputChange={onPaymentInfoInputChange}\n                    Component={ClientPaymentInfo}\n                />\n            </Form>\n        </div>\n    )\n}\n\nexport default ClientDetailsForm","import React, {useContext, useState} from \"react\";\nimport \"./ClientDetails..css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport ClientDetailsForm from \"../ClientDetailsForm/ClientDetailsForm\";\nimport {faWallet} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ClientDetails = ({getData}) => {\n    const PathService = useContext(PathServiceContext);\n\n    const [title, setTitle] = useState('Загрузка...')\n    const [breadcrumbItems, setBreadcrumbItems] = useState([\n        PathService.breadcrumbs().home(),\n        PathService.breadcrumbs().clients(),\n        PathService.breadcrumbs().client('', 'Загрузка...'),\n    ])\n\n    const onViewMounted = ({id, shortName}) => {\n        if (title !== shortName) {\n            setTitle(shortName)\n        }\n\n        const breadcrumbItemsCopy = [...breadcrumbItems]\n        const indexOfLastElement = breadcrumbItemsCopy.length - 1;\n\n        if (breadcrumbItemsCopy[indexOfLastElement].label !== shortName) {\n            breadcrumbItemsCopy[indexOfLastElement] = PathService.breadcrumbs().client(id, shortName)\n            setBreadcrumbItems(breadcrumbItemsCopy)\n        }\n    }\n\n    return (\n        <DefaultPage title={title}\n                     icon={faWallet}\n                     breadcrumbItems={breadcrumbItems}>\n            <div className=\"client-details\">\n                <WithDataWrapper\n                    getData={getData}\n                    onMount={onViewMounted}\n                    Component={ClientDetailsForm}\n                />\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default ClientDetails","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport AppService from \"../../services/App/AppService\";\nimport ToolBar from \"../ToolBar/ToolBar/ToolBar\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\"\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport Panel from \"../Panel/Panel\";\nimport AuthService from \"../../services/Auth/AuthService\";\nimport RouteWrapper from \"../RouteWrapper/RouteWrapper\";\nimport PathService from \"../../services/Path/PathService\";\nimport LoginForm from \"../LoginForm/LoginForm\";\nimport ClientsPage from \"../ClientsPage/ClientsPage\";\nimport ApiService from \"../../services/Api/ApiService\";\nimport {APP_NAME, CLIENT_VERSION} from \"../../config/config\";\nimport HomePage from \"../HomePage/HomePage\";\nimport ClientDetails from \"../ClientDetails/ClientDetails\";\nimport RoleService from \"../../services/Role/RoleService\";\nimport Loader from \"../Loader/Loader\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faBox, faCalendarAlt, faCog} from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n\n    const [userDetails, setUserDetails] = useState(AppService.getInitialUserDetails());\n    const [isAuthenticated, setAuthenticated] = useState(false);\n    const [isAuthCheckPerformed, setAuthCheckPerformed] = useState(false);\n\n    useEffect(() => {\n        const setUserRole = (role) => {\n            if (userDetails.role !== role) {\n                setUserDetails({...userDetails, role})\n            }\n        }\n\n        if (AuthService.checkIsTokenExists()) {\n            AuthService.checkAuthEndpoint()\n                .then(response => {\n                    setAuthenticated(true);\n                    setUserRole(AuthService.getRole());\n                    setAuthCheckPerformed(true);\n                })\n                .catch(e => {\n                    setAuthenticated(false);\n                    setUserRole(RoleService.anonymous());\n                    setAuthCheckPerformed(true);\n                    console.error('There has been a problem with your fetch operation: ', e.message);\n                })\n        } else {\n            setAuthCheckPerformed(true);\n            setAuthenticated(false);\n            setUserRole(RoleService.anonymous())\n        }\n\n    }, [userDetails])\n\n    const onLoginFormInputChange = ({target}) => {\n        const newUserDetails = {...userDetails}\n        newUserDetails[target.name] = target.value\n        setUserDetails(newUserDetails)\n    }\n\n    const onLoginFormSubmit = (event) => {\n        event.preventDefault()\n        AuthService.login(userDetails)\n    }\n\n    const onLogout = () => {\n        AuthService.removeToken();\n        setAuthenticated(false)\n        setUserDetails(AppService.getInitialUserDetails())\n    };\n\n    const filterClients = (dataArr) => {\n        return [...dataArr].sort(it => it.isActive ? -1 : 1)\n    }\n\n    if (!isAuthCheckPerformed) {\n        return <Loader/>\n    }\n\n    return (\n        <div className=\"app\">\n            <PathServiceContext.Provider value={PathService}>\n                <UserDetailsContext.Provider value={{\n                    username: userDetails.username,\n                    role: userDetails.role\n                }}>\n                    <BrowserRouter>\n\n                        <ToolBar {...AppService.getToolBarProps(\n                            isAuthenticated,\n                            userDetails,\n                            {\n                                name: APP_NAME,\n                                version: CLIENT_VERSION\n                            },\n                            onLogout,\n                        )}/>\n\n                        <Panel>\n                            <RouteWrapper path={PathService.login()}\n                                          roles={PathService.roles().login()}>\n                                <LoginForm\n                                    title=\"Авторизация\"\n                                    userDetails={userDetails}\n                                    onSubmit={onLoginFormSubmit}\n                                    onInputChange={onLoginFormInputChange}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.home()}\n                                          roles={PathService.roles().home()}>\n                                <HomePage\n                                    title=\"Главная\"/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.clients()}\n                                          roles={PathService.roles().clients()}>\n                                <ClientsPage\n                                    title=\"Клиенты\"\n                                    getData={ApiService.getClients}\n                                    filterData={filterClients}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.client()}\n                                          roles={PathService.roles().client()}>\n                                <ClientDetails getData={ApiService.getClient}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.operations()}\n                                          roles={PathService.roles().operations()}>\n                                <DefaultPage\n                                    title=\"Операции\"\n                                    icon={faBox}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().operations()\n                                    ]}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.workers()}\n                                          roles={PathService.roles().workers()}>\n                                <DefaultPage\n                                    title=\"Календарь\"\n                                    icon={faCalendarAlt}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().calendar()\n                                    ]}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.settings()}\n                                          roles={PathService.roles().settings()}>\n                                <DefaultPage\n                                    title=\"Настройки\"\n                                    icon={faCog}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().settings()\n                                    ]}/>\n                            </RouteWrapper>\n\n                        </Panel>\n\n                    </BrowserRouter>\n                </UserDetailsContext.Provider>\n            </PathServiceContext.Provider>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './css/bootstrap.min.css'\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}