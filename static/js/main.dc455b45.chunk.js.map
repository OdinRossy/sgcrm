{"version":3,"sources":["components/Loader/Dual Ball-0.9s-200px.svg","services/Role/RoleService.js","services/Path/PathService.js","services/App/AppService.js","services/ToolBar/ToolBarService.js","components/ToolBar/ToolBarItem/ToolBarItem.js","components/ToolBar/ToolBarBrandItem/ToolBarBrandItem.js","components/ToolBar/ToolBarLogOutItem/ToolBarLogOutItem.js","components/StatusBar/StatusBar.js","components/ToolBar/ToolBar/ToolBar.js","contexts/UserDetailsContext.js","components/NavigationBreadcrumb/NavigationBreadcrumb.js","components/DefaultPage/DefaultPage.js","components/Panel/Panel.js","handlers/responseHandlers.js","config/config.js","utils/headers.js","services/Api/ApiService.js","handlers/errorHandlers.js","services/Auth/AuthService.js","contexts/PathServiceContext.js","components/RouteWrapper/RouteWrapper.js","components/LoginForm/LoginForm.js","components/ClientCard/ClientCard.js","components/RowDataContainer/RowDataTransformer.js","components/Loader/Loader.js","components/Error/Error.js","components/WithDataWrapper/WithDataWrapper.js","components/ClientsPage/ClientsPage.js","components/HomePage/HomePage.js","components/ClientDetails/ClientDetails.js","components/App/App.js","index.js"],"names":["module","exports","anonymous","_ROLES","admin","manager","isRoleValid","role","Object","values","includes","getUserIcon","userRole","this","faUser","faUserSecret","faUserTie","_PATH_DATA","HOME","path","roles","RoleService","CLIENTS","CLIENT","OPERATIONS","WORKERS","CALENDAR","SETTINGS","LOGIN","home","clients","client","operations","workers","calendar","settings","login","breadcrumbs","label","href","id","title","isPathExists","some","it","isPathActive","targetPath","activePath","rootPath","match","toolBarService","getToolBarLogOutItemProps","onLogOut","faIcon","faSignOutAlt","onClick","className","getTopToolBarItems","ids","items","PathService","faHome","faWallet","faBox","faCalendarAlt","filterItemsByIds","getBottomToolBarItems","faCog","forceShowIcon","filter","getToolBarProps","isAuthenticated","userDetails","appInfo","logoutHandler","topItems","bottomItems","logOutItemProps","brandItemProps","appName","name","toLowerCase","statusBarProps","getLoginFormProps","loginHandler","inputChangeHandler","error","onSubmit","getInitialUserDetails","username","password","ToolBarItem","isActive","to","classNames","icon","ToolBarBrandItem","ToolBarLogOutItem","StatusBar","version","ToolBar","props","useLocation","pathname","transformToolBarItems","toolBarItems","map","itemProps","key","UserDetailsContext","createContext","NavigationBreadcrumb","length","transformedItems","i","Breadcrumb","Item","active","linkAs","Link","linkProps","DefaultPage","breadcrumbItems","children","Panel","checkResponseStatus","response","status","json","Error","statusText","loginResponseHandler","Auth","writeToken","window","location","CLIENT_VERSION","pjson","headers","dependencies","react","localStorage","auth","JSON","parse","access_token","testConnection","setConnected","showLoader","delay","console","log","testConnectionInternal","fetch","buildUri","then","catch","setTimeout","pathNames","refreshToken","getClients","_getResource","getClient","serverUrl","fetchWrapper","uri","a","init","ok","defaultErrorHandler","handler","call","ApiService","URI_LOGIN","URI_REFRESH_TOKEN","getRole","authObject","anonymousRole","Array","isArray","method","body","stringify","removeToken","checkIsTokenExists","qs","grant_type","refresh_token","checkAuthEndpoint","PathServiceContext","RouteWrapper","rest","useContext","render","isRoleAppropriate","state","from","defaultProps","LoginForm","recoverPasswordPathname","onInputChange","Form","Group","controlId","Label","Control","type","value","onChange","autoComplete","placeholder","Text","Button","variant","e","preventDefault","ClientCard","shortName","paymentInfo","legalAddress","phone","email","payerAccountNumber","addressString","RowDataTransformer","data","CardComponent","resultArr","dataArrCopy","push","splice","reshapeDataArr","row","Row","col","Col","lg","transformDataArr","Loader","src","loaderIcon","alt","text","redirectPath","Alert","Heading","faExclamationCircle","WithDataWrapper","getData","filterData","Component","useState","setData","hasLoaded","setLoaded","hasError","setError","useParams","useEffect","onSuccess","onError","ClientsPage","HomePage","ClientDetails","setTitle","setBreadcrumbItems","onMount","breadcrumbItemsCopy","indexOfLastElement","ClientDetailsView","App","AppService","setUserDetails","setAuthenticated","isAuthCheckPerformed","setAuthCheckPerformed","setUserRole","AuthService","message","Provider","event","target","newUserDetails","exact","dataArr","sort","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dc455b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dual Ball-0.9s-200px.248c6acf.svg\";","import {faUser, faUserSecret, faUserTie} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default {\n    anonymous: () => _ROLES.anonymous,\n    admin: () => _ROLES.admin,\n    manager: () => _ROLES.manager,\n\n    isRoleValid: role =>\n        Object.values(_ROLES).includes(role),\n\n    getUserIcon(userRole) {\n        switch (userRole) {\n            case this.anonymous():\n                return faUser\n            case this.admin():\n                return faUserSecret\n            case this.manager():\n                return faUserTie\n            default: {\n                return faUser\n            }\n        }\n    }\n}\n\nconst _ROLES = {\n    anonymous: 'ROLE_ANONYMOUS',\n    admin: 'ROLE_ADMIN',\n    manager: 'ROLE_MANAGER',\n}","import RoleService from \"../Role/RoleService\";\n\nconst _PATH_DATA = {\n    HOME: {\n        path: \"/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n    CLIENTS: {\n        path: \"/clients/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CLIENT: {\n        path: \"/clients/:id\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    OPERATIONS: {\n        path: \"/operations/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    WORKERS: {\n        path: \"/workers/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CALENDAR: {\n        path: \"/calendar/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager()\n        ]\n    },\n    SETTINGS: {\n        path: \"/settings\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    LOGIN: {\n        path: \"/login\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n}\n\nconst _isPathExists = path =>\n    Object.values(_PATH_DATA).some(it => it.path === path)\n\n\nexport default {\n    home: () => _PATH_DATA.HOME.path,\n    clients: () => _PATH_DATA.CLIENTS.path,\n    client: () => _PATH_DATA.CLIENT.path,\n    operations: () => _PATH_DATA.OPERATIONS.path,\n    workers: () => _PATH_DATA.WORKERS.path,\n    calendar: () => _PATH_DATA.WORKERS.path,\n    settings: () => _PATH_DATA.SETTINGS.path,\n    login: () => _PATH_DATA.LOGIN.path,\n\n    roles: () => {\n        return {\n            home: () => _PATH_DATA.HOME.roles,\n            clients: () => _PATH_DATA.CLIENTS.roles,\n            client: () => _PATH_DATA.CLIENT.roles,\n            operations: () => _PATH_DATA.OPERATIONS.roles,\n            workers: () => _PATH_DATA.WORKERS.roles,\n            calendar: () => _PATH_DATA.WORKERS.roles,\n            settings: () => _PATH_DATA.SETTINGS.roles,\n            login: () => _PATH_DATA.LOGIN.roles,\n        }\n    },\n\n    breadcrumbs: () => {\n        return {\n            home: () => {\n                return {\n                    label: 'Главная',\n                    href: _PATH_DATA.HOME.path,\n                }\n            },\n            clients: () => {\n                return {\n                    label: 'Клиенты',\n                    href: _PATH_DATA.CLIENTS.path,\n                }\n            },\n            client: (id, title) => {\n                return {\n                    label: title,\n                    href: _PATH_DATA.HOME.path + id,\n                }\n            },\n            operations: () => {\n                return {\n                    label: 'Операции',\n                    href: _PATH_DATA.OPERATIONS.path,\n                }\n            },\n            workers: () => {\n                return {\n                    label: 'Сотрудники',\n                    href: _PATH_DATA.WORKERS.path,\n                }\n            },\n            calendar: () => {\n                return {\n                    label: 'Календарь',\n                    href: _PATH_DATA.CALENDAR.path,\n                }\n            },\n            settings: () => {\n                return {\n                    label: 'Настройки',\n                    href: _PATH_DATA.SETTINGS.path,\n                }\n            }\n        }\n    },\n\n    isPathExists: _isPathExists,\n\n    isPathActive: (targetPath, activePath, rootPath = '/') => {\n        const match = activePath.match(targetPath)\n        return match && (activePath === rootPath ? true : match[0] !== rootPath)\n    },\n}","import PathService from \"../Path/PathService\";\nimport ToolBarService from \"../ToolBar/ToolBarService\";\nimport RoleService from \"../Role/RoleService\";\n\nconst toolBarService = new ToolBarService();\n\nexport default {\n    getToolBarProps(isAuthenticated, userDetails, appInfo, logoutHandler) {\n        const topItems = toolBarService.getTopToolBarItems(userDetails.role)\n        const bottomItems = toolBarService.getBottomToolBarItems(userDetails.role)\n        const logOutItemProps = toolBarService.getToolBarLogOutItemProps(logoutHandler)\n\n        return {\n            brandItemProps: {\n                appName: appInfo.name.toLowerCase(),\n            },\n            logOutItemProps,\n            topItems,\n            bottomItems,\n            isAuthenticated,\n            statusBarProps: {\n                appInfo,\n            },\n            isPathActive: PathService.isPathActive\n        }\n    },\n\n    getLoginFormProps(userDetails, loginHandler, inputChangeHandler) {\n        return {\n            userDetails: userDetails,\n            error: null,\n            onSubmit: loginHandler,\n            inputChangeHandler: inputChangeHandler\n        }\n    },\n\n    getInitialUserDetails() {\n        return {\n            username: '',\n            password: '',\n            role: RoleService.anonymous()\n        }\n    }\n}","import {\n    faBox,\n    faCalendarAlt,\n    faCog,\n    faHome,\n    faSignOutAlt,\n    faUserTie,\n    faWallet\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PathService from \"../Path/PathService\";\nimport RoleService from \"../Role/RoleService\";\n\nexport default class ToolBarService {\n    getToolBarLogOutItemProps = (onLogOut, label = 'Выйти') => {\n        return {\n            id: 'logout',\n            label,\n            faIcon: faSignOutAlt,\n            onClick: onLogOut,\n            className: 'text-danger',\n        }\n    };\n\n    getTopToolBarItems = (role) => {\n        const ids = {\n            HOME: 'home',\n            CLIENTS: 'clients',\n            OPERATIONS: 'operations',\n            WORKERS: 'workers',\n            CALENDAR: 'calendar',\n        }\n\n        const items = [\n            {\n                id: ids.HOME,\n                label: 'Главная',\n                href: PathService.home(),\n                faIcon: faHome,\n            },\n            {\n                id: ids.CLIENTS,\n                label: 'Клиенты',\n                href: PathService.clients(),\n                faIcon: faWallet,\n            },\n            {\n                id: ids.OPERATIONS,\n                label: 'Операции',\n                href: PathService.operations(),\n                faIcon: faBox,\n            },\n            {\n                id: ids.WORKERS,\n                label: 'Сотрудники',\n                href: PathService.workers(),\n                faIcon: faUserTie,\n            },\n            {\n                id: ids.CALENDAR,\n                label: 'Календарь',\n                href: PathService.calendar(),\n                faIcon: faCalendarAlt,\n            },\n        ];\n\n        switch (role) {\n            case RoleService.admin():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.OPERATIONS,\n                    ids.WORKERS)\n            case RoleService.manager():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.CALENDAR,\n                    ids.OPERATIONS)\n            case RoleService.anonymous():\n                return this.filterItemsByIds(items,\n                    ids.HOME)\n            default:\n                return []\n        }\n    }\n\n    getBottomToolBarItems = (role) => {\n        return role ? [\n            {\n                id: 'settings',\n                label: 'Настройки',\n                href: PathService.settings(),\n                faIcon: faCog,\n                forceShowIcon: true,\n            },\n        ] : []\n    }\n\n    filterItemsByIds = (items = [], ...ids) => {\n        return items.filter(it => ids.includes(it.id))\n    }\n}","import React from \"react\";\n\nimport classNames from \"classnames\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport \"./ToolBarItem.css\"\nimport {Link} from \"react-router-dom\";\n\nconst ToolBarItem = ({href, label, isActive, faIcon, forceShowIcon}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', {\n                'active': isActive\n            }\n        )\n\n    return (\n        <Link to={href} className={getClassNames()}>\n            <FontAwesomeIcon icon={faIcon}/>{label}\n        </Link>\n    )\n}\n\nexport default ToolBarItem;","import React from \"react\";\nimport \"./ToolBarBrandItem.css\";\nimport classNames from \"classnames\";\n\nconst ToolBarBrandItem = ({appName = 'App'}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'brand', 'noselect')\n\n    return (\n        <div className={getClassNames()}>\n            <span>{appName}</span>\n        </div>\n    )\n};\n\nexport default ToolBarBrandItem;","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ToolBarLogOutItem.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst ToolBarLogOutItem = ({label, faIcon, onClick, className}) => {\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'tool-bar-log-out-item', ...className)\n\n    return (\n        <div className={getClassNames()} onClick={onClick}>\n            <FontAwesomeIcon icon={faIcon}/> {label}\n        </div>\n    )\n};\n\nexport default ToolBarLogOutItem","import React from \"react\";\nimport \"./StatusBar.css\";\n\nconst StatusBar = ({appInfo}) => {\n    return (\n        <div className=\"status-bar\">\n            <div className=\"left\">\n                v. {appInfo.version}\n            </div>\n        </div>\n    )\n};\n\nexport default StatusBar","import React from \"react\";\nimport \"./ToolBar.css\"\nimport PropTypes from 'prop-types';\nimport ToolBarItem from \"../ToolBarItem/ToolBarItem\";\nimport ToolBarBrandItem from \"../ToolBarBrandItem/ToolBarBrandItem\";\nimport ToolBarLogOutItem from \"../ToolBarLogOutItem/ToolBarLogOutItem\";\nimport {useLocation} from \"react-router-dom\";\nimport StatusBar from \"../../StatusBar/StatusBar\";\n\nconst ToolBar = (props) => {\n\n    const {\n        brandItemProps,\n        logOutItemProps,\n        statusBarProps,\n        topItems,\n        bottomItems,\n        isAuthenticated,\n        isPathActive,\n    } = props;\n\n    const activePath = useLocation().pathname;\n\n    const transformToolBarItems = (toolBarItems) =>\n        toolBarItems.map(itemProps =>\n            <ToolBarItem key={itemProps.id} {...itemProps} isActive={isPathActive(itemProps.href, activePath)}/>\n        );\n\n    return (\n        <div className=\"vertical-menu shadow\">\n\n            <ToolBarBrandItem {...brandItemProps} />\n            {\n                transformToolBarItems(topItems)\n            }\n            <div className=\"bottom-container\">\n                {\n                    transformToolBarItems(bottomItems)\n                }\n                {\n                    isAuthenticated ? <ToolBarLogOutItem {...logOutItemProps}/> : null\n                }\n                <StatusBar {...statusBarProps}/>\n            </div>\n        </div>\n    );\n};\n\nToolBar.propTypes = {\n    brandItemProps: PropTypes.object,\n    logOutItemProps: PropTypes.object,\n    isAuthenticated: PropTypes.bool,\n    topItems: PropTypes.arrayOf(PropTypes.object),\n    bottomItems: PropTypes.arrayOf(PropTypes.object),\n    appInfo: PropTypes.object,\n}\n\nexport default ToolBar;","import {createContext} from \"react\";\nimport RoleService from \"../services/Role/RoleService\";\n\nexport const UserDetailsContext = createContext({\n    username: '',\n    role: RoleService.anonymous(),\n});","import React from \"react\";\nimport {Breadcrumb} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst NavigationBreadcrumb = ({items = []}) => {\n\n    if (!items || items.length === 0) {\n        return null\n    }\n\n    const transformedItems = items.map((it, i) => (\n        <Breadcrumb.Item active={i === items.length - 1}\n                         key={i}\n                         linkAs={Link}\n                         linkProps={{to: it.href}}>{it.label}</Breadcrumb.Item>\n    ))\n\n    return (\n        <Breadcrumb>\n            {\n                transformedItems\n            }\n        </Breadcrumb>\n    )\n}\n\nexport default NavigationBreadcrumb","import React from \"react\";\n\nimport \"./DefaultPage.css\"\nimport NavigationBreadcrumb from \"../NavigationBreadcrumb/NavigationBreadcrumb\";\n\nconst DefaultPage = ({title, breadcrumbItems = [], children}) => {\n    return (\n        <div className=\"default-page\">\n\n            {\n                title ? (\n                    <div className=\"title\">\n                        <h2>{title}</h2>\n                    </div>\n                ) : null\n            }\n\n            {\n                breadcrumbItems.length ? (\n                    <div className=\"mt-4\">\n                        <NavigationBreadcrumb items={breadcrumbItems}/>\n                    </div>\n                ) : null\n            }\n\n            {children}\n        </div>\n    )\n};\n\nexport default DefaultPage","import React from \"react\";\n\nimport \"./Panel.css\";\n\nconst Panel = ({children}) => {\n    return (\n        <div className=\"panel\">\n            {\n                children\n            }\n        </div>\n    )\n}\n\nexport default Panel;","import Auth from '../services/Auth/AuthService';\nimport PathService from \"../services/Path/PathService\";\n\nexport const checkResponseStatus = response => {\n    if (response.status >= 200 && response.status < 300) {\n        return response.json()\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n};\n\nexport const loginResponseHandler = response => {\n    Auth.writeToken(response);\n    window.location.pathname = PathService.home()\n};","import pjson from '../../package.json';\n\nexport const SERVER_URL = 'http://localhost:8080';\nexport const CLIENT_VERSION = pjson.version;\nexport const REACT_VERSION = pjson.dependencies.react;\n","export const headers = () => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.auth ? JSON.parse(localStorage.auth).access_token : null}`\n    }\n}","import {SERVER_URL} from \"../../config/config\";\nimport {headers} from \"../../utils/headers\";\n\nexport default {\n\n    testConnection(setConnected, showLoader, delay = 0) {\n        console.log('Test connection..')\n\n        const testConnectionInternal = () => {\n            const onSuccess = () => {\n                setConnected(true);\n                console.log('Connected to server.')\n            };\n\n            const onError = error => {\n                setConnected(false);\n                console.error('Not connected to server. Error:', error)\n            }\n\n            fetch(buildUri('/api/testConnection'), {\n                headers: headers()\n            }).then(onSuccess)\n                .catch(onError);\n        }\n\n        if (delay > 0) {\n            showLoader();\n\n            setTimeout(() => {\n                testConnectionInternal()\n            }, delay);\n\n        } else {\n            testConnectionInternal()\n        }\n    },\n\n    pathNames() {\n        return {\n            login: '/api/login',\n            refreshToken: '/oauth/access_token'\n        }\n    },\n\n    getClients() {\n        return _getResource(buildUri('/api/client'))\n    },\n\n    getClient(id) {\n        return _getResource(buildUri(`/api/client/${id}`))\n    }\n};\n\nexport const buildUri = (path, serverUrl = SERVER_URL) => {\n    return `${serverUrl}${path}`\n};\n\nexport const fetchWrapper = async function (uri, init = {}) {\n    init.headers = {...init.headers, ...headers()}\n    const response = await fetch(uri, init)\n    if (response.ok) {\n        return response;\n    }\n    throw new Error('Network response was not ok.');\n}\n\nconst _getResource = async (uri) => {\n    try {\n        const response = await fetchWrapper(uri)\n\n        return response.json()\n    } catch (e) {\n        throw e\n    }\n};","export const defaultErrorHandler = (error, handler) => {\n    console.error(error);\n\n    if (handler) {\n        handler.call();\n    }\n};","import {checkResponseStatus, loginResponseHandler} from \"../../handlers/responseHandlers\";\nimport * as qs from \"qs\";\nimport ApiService, {buildUri, fetchWrapper} from \"../Api/ApiService\";\nimport {defaultErrorHandler} from \"../../handlers/errorHandlers\";\nimport RoleService from \"../Role/RoleService\";\n\nconst {login: URI_LOGIN, refreshToken: URI_REFRESH_TOKEN} = ApiService.pathNames()\n\nexport default {\n\n    getRole() {\n        const authObject = JSON.parse(localStorage.auth);\n        const anonymousRole = RoleService.anonymous()\n        if (authObject && authObject.roles) {\n            const {roles} = authObject;\n            if (Array.isArray(roles) && roles.length > 0) {\n                return RoleService.isRoleValid(roles[0]) ? roles[0] : anonymousRole;\n            }\n        }\n\n        return null;\n    },\n\n    login(userDetails) {\n        fetch(buildUri(URI_LOGIN), {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }).then(checkResponseStatus)\n            .then(loginResponseHandler)\n            .catch(defaultErrorHandler);\n    },\n\n    writeToken(auth) {\n        localStorage.auth = JSON.stringify(auth);\n    },\n\n    removeToken() {\n        delete localStorage.auth;\n    },\n\n    checkIsTokenExists() {\n        return !!localStorage.auth\n    },\n\n    refreshToken() {\n        return fetch(buildUri(URI_REFRESH_TOKEN), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            body: qs.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: JSON.parse(localStorage.auth).refresh_token\n            })\n        }).then(checkResponseStatus)\n            .then(this.writeToken)\n            .catch(() => {\n                throw new Error(\"Unable to refresh!\")\n            })\n    },\n\n    checkAuthEndpoint() {\n        return fetchWrapper(buildUri('/api/checkAuth'))\n    }\n};","import {createContext} from \"react\";\n\nexport const PathServiceContext = createContext(null)","import React, {useContext} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst RouteWrapper = ({children, roles, ...rest}) => {\n\n    const userDetails = useContext(UserDetailsContext);\n    const PathService = useContext(PathServiceContext);\n\n    const isRoleAppropriate = (role, roles) => roles.includes(role);\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isRoleAppropriate(userDetails.role, roles) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: PathService.login(),\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n\n};\n\nexport default RouteWrapper\n\nRouteWrapper.defaultProps = {\n    roles: [],\n}","import React from \"react\";\nimport \"./LoginForm.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const {\n        title,\n        onSubmit,\n        recoverPasswordPathname,\n        userDetails,\n        onInputChange\n    } = props;\n\n    return (\n        <DefaultPage>\n            <div className=\"login-form shadow\">\n\n                <div className=\"title\">\n                    <h2>{title}</h2>\n                </div>\n\n                <Form onSubmit={onSubmit}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Введите имя пользователя:</Form.Label>\n                        <Form.Control type=\"text\"\n                                      name=\"username\"\n                                      value={userDetails.username}\n                                      onChange={onInputChange}\n                                      autoComplete=\"username\"\n                                      placeholder=\"Имя пользователя\"/>\n                        <Form.Text className=\"text-muted\">\n                            Мы заботимся о конфеденциальности Ваших данных.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Введите пароль:</Form.Label>\n                        <Form.Control type=\"password\"\n                                      name=\"password\"\n                                      value={userDetails.password}\n                                      onChange={onInputChange}\n                                      autoComplete=\"current-password\"\n                                      placeholder=\"Пароль\"/>\n                        <Form.Text>\n                            <Link to={recoverPasswordPathname}>Забыли пароль?</Link>\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Подтвердить\n                    </Button>\n                </Form>\n            </div>\n        </DefaultPage>\n    )\n}\n\nLoginForm.defaultProps = {\n    title: 'Login form',\n    onSubmit: (e) => e.preventDefault(),\n    recoverPasswordPathname: '/recoverPassword',\n    userDetails: {\n        username: '',\n        password: ''\n    },\n    onInputChange: () => {\n    }\n}\n\nexport default LoginForm","import React from \"react\";\nimport \"./ClientCard.css\";\nimport classNames from \"classnames\"\nimport {Link} from \"react-router-dom\";\n\nconst ClientCard = (props) => {\n    const {\n        id,\n        shortName,\n        paymentInfo = {},\n        legalAddress = {},\n        phone,\n        email,\n        isActive\n    } = props\n\n    const className = classNames('client-card', 'shadow', {\n        'active': isActive\n    })\n\n    return (\n        <div className={className}>\n            <div className=\"title\">\n                <Link to={`${id}`}>\n                    <h4>{shortName}</h4>\n                </Link>\n            </div>\n            <hr/>\n            <div className=\"body\">\n                <div className=\"item\">\n                    УНП: {paymentInfo.payerAccountNumber}\n                </div>\n                <div className=\"item\">\n                    Тел.: <a href={`tel:${phone}`}>{phone}</a>\n                </div>\n                <div className=\"item\">\n                    E-mail: <a href={`mailto:${email}`}>{email}</a>\n                </div>\n                <div className=\"item\">\n                    Юр. адрес: {legalAddress.addressString}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClientCard\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nconst RowDataTransformer = ({data = [], CardComponent}) => {\n\n    const reshapeDataArr = (data) => {\n        let resultArr = [];\n\n        if (Array.isArray(data)) {\n            let dataArrCopy = [...data]\n            while (dataArrCopy.length) {\n                resultArr.push(dataArrCopy.splice(0, 3))\n            }\n        }\n\n        return resultArr;\n    }\n\n    const transformDataArr = (data) => {\n        return reshapeDataArr(data).map((row, i) => (\n            <Row key={i}>\n                {\n                    row.map((col, i) => (\n                        <Col key={i} lg={4}>\n                            <CardComponent key={col.id} {...col}/>\n                        </Col>\n                    ))\n                }\n            </Row>\n        ))\n    };\n\n    return (\n        <>{transformDataArr(data)}</>\n    )\n};\n\nexport default RowDataTransformer","import React from \"react\";\n\nimport \"./Loader.css\"\nimport loaderIcon from \"./Dual Ball-0.9s-200px.svg\"\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <img src={loaderIcon} alt=\"loading..\"/>\n        </div>\n    )\n};\n\nexport default Loader","import React from \"react\";\nimport \"./Error.css\";\nimport {Alert} from \"react-bootstrap\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {faExclamationCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst Error = ({title, text, redirectPath}) => {\n    return (\n        <DefaultPage>\n            <div className=\"error\">\n                <Alert variant=\"danger\">\n                    <Alert.Heading>\n                        <FontAwesomeIcon icon={faExclamationCircle}/> {title}\n                    </Alert.Heading>\n                    <p>\n                        {\n                            text\n                        }\n                        {\n                            redirectPath ?\n                                <>\n                                    <hr/>\n                                    <div>\n                                        Вы можете вернуться на <Alert.Link\n                                        href={redirectPath}>главную</Alert.Link> страницу.\n                                    </div>\n                                </> : null\n                        }\n                    </p>\n                </Alert>\n            </div>\n        </DefaultPage>\n    );\n}\n\nError.defaultProps = {\n    title: \"Произошла неизвестная ошибка.\",\n    text: `Наша команда уже работает над решением возникшей проблемы.`,\n    redirectPath: '/'\n}\n\nexport default Error","import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport Error from \"../Error/Error\";\n\nconst WithDataWrapper = (props) => {\n\n    const {getData, filterData, Component} = props\n\n    const [data, setData] = useState([])\n    const [hasLoaded, setLoaded] = useState(false)\n    const [hasError, setError] = useState(false)\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const onSuccess = (data) => {\n            setLoaded(true)\n            setError(false)\n            setData(data)\n        }\n\n        const onError = (error) => {\n            console.error(error)\n            setLoaded(true)\n            setError(true)\n        }\n\n        if (id) {\n            getData(id)\n                .then(onSuccess)\n                .catch(onError)\n        } else {\n            getData()\n                .then(onSuccess)\n                .catch(onError)\n        }\n\n\n    }, [getData, id])\n\n    if (!hasLoaded) {\n        return <Loader/>\n    }\n\n    if (hasError) {\n        return <Error/>\n    }\n\n    return (\n        <Component {...props} data={filterData(data)}/>\n    )\n}\n\nWithDataWrapper.propTypes = {\n    getData: PropTypes.func,\n    filterData: PropTypes.func,\n    Component: PropTypes.elementType\n}\n\nWithDataWrapper.defaultProps = {\n    filterData: (data) => data\n}\n\nexport default WithDataWrapper;\n\n","import React, {useContext} from \"react\";\nimport \"./ClientsPage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport ClientCard from \"../ClientCard/ClientCard\";\nimport RowDataTransformer from \"../RowDataContainer/RowDataTransformer\";\nimport PropTypes from \"prop-types\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst ClientsPage = (props) => {\n    const {\n        title,\n        filterData,\n        getData\n    } = props\n\n    const PathService = useContext(PathServiceContext)\n\n    return (\n        <DefaultPage title={title}\n                     breadcrumbItems={[\n                         PathService.breadcrumbs().home(),\n                         PathService.breadcrumbs().clients(),\n                     ]}>\n            <div className=\"clients-page\">\n\n                <WithDataWrapper\n                    getData={getData}\n                    filterData={filterData}\n                    Component={RowDataTransformer}\n                    CardComponent={ClientCard}\n                />\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nClientsPage.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n}\n\nClientsPage.defaultProps = {\n    title: '',\n    data: [],\n}\n\nexport default ClientsPage\n\n\n","import React, {useContext} from \"react\";\nimport \"./HomePage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst HomePage = ({title}) => {\n    const PathService = useContext(PathServiceContext);\n\n    return (\n        <DefaultPage title={title}\n                     breadcrumbItems={[PathService.breadcrumbs().home()]}>\n            <div className=\"home-page\">\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default HomePage","import React, {useContext, useEffect, useState} from \"react\";\nimport \"./ClientDetails..css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst ClientDetails = ({getData}) => {\n    const PathService = useContext(PathServiceContext);\n\n    const [title, setTitle] = useState('Загрузка...')\n    const [breadcrumbItems, setBreadcrumbItems] = useState([\n        PathService.breadcrumbs().home(),\n        PathService.breadcrumbs().clients(),\n        PathService.breadcrumbs().client('', 'Загрузка...'),\n    ])\n\n    const onViewMounted = ({id, shortName}) => {\n        if (title !== shortName) {\n            setTitle(shortName)\n        }\n\n        const breadcrumbItemsCopy = [...breadcrumbItems]\n        const indexOfLastElement = breadcrumbItemsCopy.length - 1;\n\n        if (breadcrumbItemsCopy[indexOfLastElement].label !== shortName) {\n            breadcrumbItemsCopy[indexOfLastElement] = PathService.breadcrumbs().client(id, shortName)\n            setBreadcrumbItems(breadcrumbItemsCopy)\n        }\n    }\n\n    return (\n        <DefaultPage title={title}\n                     breadcrumbItems={breadcrumbItems}>\n            <div className=\"client-details\">\n                <WithDataWrapper\n                    getData={getData}\n                    onMount={onViewMounted}\n                    Component={ClientDetailsView}\n                />\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default ClientDetails\n\nconst ClientDetailsView = ({data, onMount}) => {\n\n    useEffect(() => {\n        onMount(data)\n    }, [onMount, data])\n\n    return (\n        <div className=\"client-details-view\">\n\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport AppService from \"../../services/App/AppService\";\nimport ToolBar from \"../ToolBar/ToolBar/ToolBar\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\"\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport Panel from \"../Panel/Panel\";\nimport AuthService from \"../../services/Auth/AuthService\";\nimport RouteWrapper from \"../RouteWrapper/RouteWrapper\";\nimport PathService from \"../../services/Path/PathService\";\nimport LoginForm from \"../LoginForm/LoginForm\";\nimport ClientsPage from \"../ClientsPage/ClientsPage\";\nimport ApiService from \"../../services/Api/ApiService\";\nimport {CLIENT_VERSION} from \"../../config/config\";\nimport HomePage from \"../HomePage/HomePage\";\nimport ClientDetails from \"../ClientDetails/ClientDetails\";\nimport RoleService from \"../../services/Role/RoleService\";\nimport Loader from \"../Loader/Loader\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst App = () => {\n\n    const [userDetails, setUserDetails] = useState(AppService.getInitialUserDetails());\n    const [isAuthenticated, setAuthenticated] = useState(false);\n    const [isAuthCheckPerformed, setAuthCheckPerformed] = useState(false)\n\n    useEffect(() => {\n        const setUserRole = (role) => {\n            if (userDetails.role !== role) {\n                setUserDetails({...userDetails, role})\n            }\n        }\n\n        if (AuthService.checkIsTokenExists()) {\n            AuthService.checkAuthEndpoint()\n                .then(response => {\n                    setAuthenticated(true);\n                    setUserRole(AuthService.getRole());\n                    setAuthCheckPerformed(true);\n                })\n                .catch(e => {\n                    setAuthenticated(false);\n                    setUserRole(RoleService.anonymous());\n                    setAuthCheckPerformed(true);\n                    console.error('There has been a problem with your fetch operation: ', e.message);\n                })\n        } else {\n            setAuthCheckPerformed(true);\n            setAuthenticated(false);\n            setUserRole(RoleService.anonymous())\n        }\n\n    }, [userDetails])\n\n    const onLoginFormInputChange = ({target}) => {\n        const newUserDetails = {...userDetails}\n        newUserDetails[target.name] = target.value\n        setUserDetails(newUserDetails)\n    }\n\n    const onLoginFormSubmit = (event) => {\n        event.preventDefault()\n        AuthService.login(userDetails)\n    }\n\n    const onLogout = () => {\n        AuthService.removeToken();\n        setAuthenticated(false)\n        setUserDetails(AppService.getInitialUserDetails())\n    };\n\n    const filterClients = (dataArr) => {\n        return [...dataArr].sort(it => it.isActive ? -1 : 1)\n    }\n\n    if (!isAuthCheckPerformed) {\n        return <Loader/>\n    }\n\n    return (\n        <div className=\"app\">\n            <PathServiceContext.Provider value={PathService}>\n                <UserDetailsContext.Provider value={{\n                    username: userDetails.username,\n                    role: userDetails.role\n                }}>\n                    <BrowserRouter>\n\n                        <ToolBar {...AppService.getToolBarProps(\n                            isAuthenticated,\n                            userDetails,\n                            {\n                                name: 'sgcrm',\n                                version: CLIENT_VERSION\n                            },\n                            onLogout,\n                        )}/>\n\n                        <Panel>\n                            <RouteWrapper path={PathService.login()}\n                                          roles={PathService.roles().login()}>\n                                <LoginForm\n                                    title=\"Авторизация\"\n                                    userDetails={userDetails}\n                                    onSubmit={onLoginFormSubmit}\n                                    onInputChange={onLoginFormInputChange}\n                                />\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.home()}\n                                          roles={PathService.roles().home()}>\n                                <HomePage\n                                    title=\"Главная\"/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.clients()}\n                                          roles={PathService.roles().clients()}>\n                                <ClientsPage\n                                    title=\"Клиенты\"\n                                    getData={ApiService.getClients}\n                                    filterData={filterClients}\n                                />\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.client()}\n                                          roles={PathService.roles().client()}>\n                                <ClientDetails\n                                    getData={ApiService.getClient}\n                                />\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.operations()}\n                                          roles={PathService.roles().operations()}>\n                                <DefaultPage\n                                    title=\"Операции\"\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().operations()\n                                    ]}\n                                />\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.workers()}\n                                          roles={PathService.roles().workers()}>\n                                <DefaultPage\n                                    title=\"Сотрудники\"\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().workers()\n                                    ]}\n                                />\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.settings()}\n                                          roles={PathService.roles().settings()}>\n                                <DefaultPage\n                                    title=\"Настройки\"\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().settings()\n                                    ]}\n                                />\n                            </RouteWrapper>\n\n                        </Panel>\n\n                    </BrowserRouter>\n                </UserDetailsContext.Provider>\n            </PathServiceContext.Provider>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './css/bootstrap.min.css'\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}