{"version":3,"sources":["services/Role/RoleService.js","config/config.js","services/Path/PathService.js","history.js","handlers/responseHandlers.js","utils/headers.js","services/Api/ApiService.js","services/Auth/AuthService.js","services/App/AppService.js","services/ToolBar/ToolBarService.js","components/ToolBar/ToolBarItem/ToolBarItem.js","components/ToolBar/ToolBarBrandItem/ToolBarBrandItem.js","components/ToolBar/ToolBarLogOutItem/ToolbarAuthenticationItem.js","components/StatusBar/StatusBar.js","contexts/UserDetailsContext.js","components/ToolBar/ToolBar/ToolBar.js","components/NavigationBreadcrumb/NavigationBreadcrumb.js","components/DefaultPage/DefaultPage.js","components/Panel/Panel.js","contexts/PathServiceContext.js","components/RouteWrapper/RouteWrapper.js","components/LoginForm/LoginForm.js","components/ClientCard/ClientCard.js","components/RowDataContainer/RowDataTransformer.js","components/Loader/Loader.js","components/AlertDanger/AlertDanger.js","components/WithDataWrapper/WithDataWrapper.js","components/ClientsPage/ClientsPage.js","components/HomePage/HomePage.js","components/ClientInfo/WithClientInfoWrapper.js","components/ClientInfo/ClientGeneralInfo.js","components/ClientInfo/ClientAddressInfo.js","components/ClientInfo/ClientPaymentInfo.js","components/TooltipWrapper/TooltipWrapper.js","components/ButtonBar/ButtonBar.js","components/AlertSuccess/AlertSuccess.js","handlers/inputHandlers.js","utils/utils.js","components/MeetingForm/MeetingForm.js","components/MeetingFormWrapper/MeetingFormWrapper.js","components/ClientDetailsForm/ClientDetailsForm.js","components/ClientDetails/ClientDetails.js","handlers/errorHandlers.js","components/App/App.js","index.js","components/Loader/Dual Ball-0.9s-200px.svg"],"names":["anonymous","_ROLES","admin","manager","isRoleValid","role","Object","values","includes","getUserIcon","userRole","this","faUser","faUserSecret","faUserTie","CLIENT_VERSION","pjson","version","HOME_PAGE","dependencies","react","homepage","APP_NAME","name","HOME_PATH","parts","split","length","_getHomePath","_PATH_DATA","HOME","path","roles","RoleService","CLIENTS","NEW_CLIENT","CLIENT","OPERATIONS","WORKERS","CALENDAR","SETTINGS","LOGIN","home","clients","newClient","client","operations","workers","calendar","settings","login","buildPathToClient","id","String","replace","breadcrumbs","label","href","title","isPathExists","some","it","isPathActive","targetPath","activePath","rootPath","match","createBrowserHistory","checkResponseStatus","response","ok","isNotAuthorizedError","history","push","PathService","error","Error","statusText","status","headers","localStorage","auth","JSON","parse","access_token","pathNames","refreshToken","getCurrentUserId","_getResource","buildUri","getClients","getClient","saveClient","fetchWrapper","method","body","stringify","then","updateClient","saveMeeting","meeting","serverUrl","uri","a","init","initCopy","fetch","json","ApiService","URI_LOGIN","URI_REFRESH_TOKEN","getCurrentRole","Array","isArray","userDetails","writeToken","removeToken","checkIsTokenExists","qs","grant_type","refresh_token","catch","checkAuthEndpoint","toolBarService","getLoginItemProps","faIcon","faSignInAlt","onClick","className","getLogoutItemProps","onLogOut","faSignOutAlt","getToolBarLogOutItemProps","getTopToolBarItems","ids","items","faHome","faWallet","faBox","faCalendarAlt","filterItemsByIds","getBottomToolBarItems","faCog","forceShowIcon","filter","getToolBarProps","appInfo","logoutHandler","topItems","bottomItems","logoutItemProps","loginItemProps","brandItemProps","appName","toLowerCase","statusBarProps","getLoginFormProps","loginHandler","inputChangeHandler","onSubmit","getInitialUserDetails","username","password","AuthService","isAuthenticated","isProdEnv","process","ToolBarItem","isActive","to","classNames","icon","ToolBarBrandItem","ToolbarAuthenticationItem","StatusBar","UserDetailsContext","createContext","ToolBar","props","useLocation","pathname","transformToolBarItems","toolBarItems","map","itemProps","key","authenticationItemProps","useContext","NavigationBreadcrumb","transformedItems","i","Breadcrumb","Item","active","linkAs","Link","linkProps","DefaultPage","breadcrumbItems","children","faCheck","Panel","PathServiceContext","RouteWrapper","rest","render","location","isRoleAppropriate","state","from","defaultProps","LoginForm","recoverPasswordPathname","onInputChange","Form","Group","controlId","Label","Control","type","value","onChange","autoComplete","placeholder","Text","Button","variant","e","preventDefault","ClientCard","shortName","paymentInfo","webSite","phone","email","payerAccountNumber","RowDataTransformer","data","CardComponent","resultArr","dataArrCopy","splice","reshapeDataArr","row","Row","col","Col","lg","transformDataArr","Loader","src","loaderIcon","alt","AlertDanger","text","setShow","redirectPath","isDismissible","onClose","Alert","dismissible","Heading","faExclamationCircle","as","WithDataWrapper","getData","filterData","Component","useParams","useState","setData","hasLoaded","setLoaded","hasError","setError","getDataWrapper","useCallback","onSuccess","onError","console","useEffect","reload","newData","ClientsPage","faLongArrowAltDown","faLongArrowAltUp","HomePage","Jumbotron","WithClientInfoWrapper","buildId","postfix","prefix","ClientGeneralInfo","readonly","required","disabled","fullName","fax","ClientAddressInfo","countries","countryList","addressString","city","countryISO2code","postcode","ClientPaymentInfo","bankName","sm","bankIdentificationCode","checkingAccountNumber","TooltipWrapper","placement","delay","show","hide","OverlayTrigger","overlay","Tooltip","Math","round","random","ButtonBar","buttons","btn","tooltip","AlertSuccess","target","object","hasOwnProperty","objectCopy","getISODateString","date","Date","toISOString","MeetingForm","readOnly","min","faSave","MeetingFormWrapper","showSuccessAlert","showErrorAlert","userId","user","setMeeting","ClientDetailsForm","onMount","modes","edit","create","INITIAL_ERROR_STATE","message","generalInfo","setGeneralInfo","legalAddress","legalAddressInfo","setLegalAddressInfo","mailingAddress","mailingAddressInfo","setMailingAddressInfo","setPaymentInfo","mode","setMode","showAlertSuccess","setShowAlertSuccess","showMeetingForm","setSetShowMeetingForm","isShowMode","modeName","equals","obj1","obj2","entries","toString","hideAlertDanger","onSubmitWrapper","isEditMode","window","scrollTo","onCancel","faPen","faTrashAlt","faBan","copy","ClientDetails","setTitle","setBreadcrumbItems","onViewMounted","newTitle","breadcrumbItemsCopy","indexOfLastElement","undefined","defaultErrorHandler","handler","call","App","AppService","setUserDetails","isLoginRequestSending","setLoginRequestSending","checkAuth","setDetails","userDetailsDelta","Provider","event","resp","Auth","newUserDetails","exact","dataArr","sort","b","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c8ef33f9.chunk.js","sourcesContent":["import {faUser, faUserSecret, faUserTie} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default {\n    anonymous: () => _ROLES.anonymous,\n    admin: () => _ROLES.admin,\n    manager: () => _ROLES.manager,\n\n    isRoleValid: role =>\n        Object.values(_ROLES).includes(role),\n\n    getUserIcon(userRole) {\n        switch (userRole) {\n            case this.anonymous():\n                return faUser\n            case this.admin():\n                return faUserSecret\n            case this.manager():\n                return faUserTie\n            default: {\n                return faUser\n            }\n        }\n    }\n}\n\nconst _ROLES = {\n    anonymous: 'ROLE_ANONYMOUS',\n    admin: 'ROLE_ADMIN',\n    manager: 'ROLE_MANAGER',\n}","import pjson from '../../package.json';\n\nexport const SERVER_URL = 'http://localhost:8080';\nexport const CLIENT_VERSION = pjson.version;\nexport const REACT_VERSION = pjson.dependencies.react;\nexport const HOME_PAGE = pjson.homepage;\nexport const APP_NAME = pjson.name;\n","import RoleService from \"../Role/RoleService\";\nimport {APP_NAME, HOME_PAGE} from \"../../config/config\";\n\nconst _getHomePath = () => {\n    const parts = HOME_PAGE.split('/');\n    return parts && parts.length > 0 ?\n        parts[parts.length - 1] : APP_NAME\n}\n\nconst HOME_PATH = `/${_getHomePath()}`;\n\nconst _PATH_DATA = {\n    HOME: {\n        path: HOME_PATH,\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n    CLIENTS: {\n        path: HOME_PATH + \"/clients/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    NEW_CLIENT: {\n        path: HOME_PATH + \"/newClient\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CLIENT: {\n        path: HOME_PATH + \"/clients/:id\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    OPERATIONS: {\n        path: HOME_PATH + \"/operations/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    WORKERS: {\n        path: HOME_PATH + \"/workers/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    CALENDAR: {\n        path: HOME_PATH + \"/calendar/\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager()\n        ]\n    },\n    SETTINGS: {\n        path: HOME_PATH + \"/settings\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n        ],\n    },\n    LOGIN: {\n        path: HOME_PATH + \"/login\",\n        roles: [\n            RoleService.admin(),\n            RoleService.manager(),\n            RoleService.anonymous(),\n        ],\n    },\n}\n\nconst _isPathExists = path =>\n    Object.values(_PATH_DATA).some(it => it.path === path)\n\n\nexport default {\n    home: () => _PATH_DATA.HOME.path,\n    clients: () => _PATH_DATA.CLIENTS.path,\n    newClient: () => _PATH_DATA.NEW_CLIENT.path,\n    client: () => _PATH_DATA.CLIENT.path,\n    operations: () => _PATH_DATA.OPERATIONS.path,\n    workers: () => _PATH_DATA.WORKERS.path,\n    calendar: () => _PATH_DATA.WORKERS.path,\n    settings: () => _PATH_DATA.SETTINGS.path,\n    login: () => _PATH_DATA.LOGIN.path,\n\n    buildPathToClient: (id) => String(_PATH_DATA.CLIENT.path)\n        .replace(':id', id),\n\n    roles: () => {\n        return {\n            home: () => _PATH_DATA.HOME.roles,\n            clients: () => _PATH_DATA.CLIENTS.roles,\n            newClient: () => _PATH_DATA.NEW_CLIENT.roles,\n            client: () => _PATH_DATA.CLIENT.roles,\n            operations: () => _PATH_DATA.OPERATIONS.roles,\n            workers: () => _PATH_DATA.WORKERS.roles,\n            calendar: () => _PATH_DATA.WORKERS.roles,\n            settings: () => _PATH_DATA.SETTINGS.roles,\n            login: () => _PATH_DATA.LOGIN.roles,\n        }\n    },\n\n    breadcrumbs: () => {\n        return {\n            home: () => {\n                return {\n                    label: 'Главная',\n                    href: _PATH_DATA.HOME.path,\n                }\n            },\n            clients: () => {\n                return {\n                    label: 'Клиенты',\n                    href: _PATH_DATA.CLIENTS.path,\n                }\n            },\n            newClient: () => {\n                return {\n                    label: 'Новый клиент',\n                    href: _PATH_DATA.NEW_CLIENT.path,\n                }\n            },\n            client: (id, title) => {\n                return {\n                    label: title,\n                    href: _PATH_DATA.HOME.path + id,\n                }\n            },\n            operations: () => {\n                return {\n                    label: 'Операции',\n                    href: _PATH_DATA.OPERATIONS.path,\n                }\n            },\n            workers: () => {\n                return {\n                    label: 'Сотрудники',\n                    href: _PATH_DATA.WORKERS.path,\n                }\n            },\n            calendar: () => {\n                return {\n                    label: 'Календарь',\n                    href: _PATH_DATA.CALENDAR.path,\n                }\n            },\n            settings: () => {\n                return {\n                    label: 'Настройки',\n                    href: _PATH_DATA.SETTINGS.path,\n                }\n            }\n        }\n    },\n\n    isPathExists: _isPathExists,\n\n    isPathActive: (targetPath, activePath, rootPath = HOME_PATH) => {\n        const match = activePath.match(targetPath)\n        return match && (activePath === rootPath ? true : match[0] !== rootPath)\n    },\n}","// history.js\nimport {createBrowserHistory} from 'history'\n\nexport default createBrowserHistory({\n    /* pass a configuration object here if needed */\n})","import PathService from \"../services/Path/PathService\";\nimport history from '../history';\n\nexport const checkResponseStatus = response => {\n    if (response.ok) {\n        return response\n    } else {\n        if (isNotAuthorizedError(response)) {\n            history.push(PathService.login())\n        }\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n};\nexport const isNotAuthorizedError = response => response.status === 401","export const headers = () => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.auth ? JSON.parse(localStorage.auth).access_token : null}`\n    }\n}","import {SERVER_URL} from \"../../config/config\";\nimport {headers} from \"../../utils/headers\";\nimport {checkResponseStatus} from \"../../handlers/responseHandlers\";\n\nexport default {\n    pathNames() {\n        return {\n            login: '/api/login',\n            refreshToken: '/oauth/access_token'\n        }\n    },\n\n    getCurrentUserId() {\n        return _getResource(buildUri('/api/currentUserId'))\n    },\n\n    getClients() {\n        return _getResource(buildUri('/api/client'))\n    },\n\n    getClient(id) {\n        return _getResource(buildUri(`/api/client/${id}`))\n    },\n\n    saveClient(client) {\n        return fetchWrapper(buildUri('/api/client/'), {\n            method: 'post',\n            body: JSON.stringify(client)\n        }).then(checkResponseStatus)\n    },\n\n    updateClient(id, client) {\n        return fetchWrapper(buildUri(`/api/client/${id}`), {\n            method: 'put',\n            body: JSON.stringify(client)\n        }).then(checkResponseStatus)\n    },\n\n    saveMeeting(meeting) {\n        return fetchWrapper(buildUri('/api/meeting'), {\n            method: 'post',\n            body: JSON.stringify(meeting)\n        }).then(checkResponseStatus)\n    }\n};\n\nexport const buildUri = (path, serverUrl = SERVER_URL) => {\n    return `${serverUrl}${path}`\n};\n\nexport const fetchWrapper = async function (uri, init = {}) {\n    const initCopy = {...init};\n    initCopy.headers = {...initCopy.headers, ...headers()}\n    return fetch(uri, initCopy).then(checkResponseStatus)\n}\n\nconst _getResource = async (uri) => {\n    try {\n        const response = await fetchWrapper(uri)\n        return response.json()\n    } catch (e) {\n        throw e\n    }\n};","import {checkResponseStatus} from \"../../handlers/responseHandlers\";\nimport * as qs from \"qs\";\nimport ApiService, {buildUri, fetchWrapper} from \"../Api/ApiService\";\n\nconst {login: URI_LOGIN, refreshToken: URI_REFRESH_TOKEN} = ApiService.pathNames()\n\nexport default {\n\n    getCurrentRole() {\n        if (localStorage.auth) {\n            const auth = JSON.parse(localStorage.auth);\n\n            if (auth && auth.roles) {\n                const {roles} = auth;\n                if (Array.isArray(roles) && roles.length > 0) {\n                    return roles[0];\n                }\n            }\n        }\n\n        return null;\n    },\n\n    login(userDetails) {\n        return fetch(buildUri(URI_LOGIN), {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userDetails)\n        }).then(checkResponseStatus)\n    },\n\n    writeToken(auth) {\n        localStorage.auth = JSON.stringify(auth);\n    },\n\n    removeToken() {\n        delete localStorage.auth;\n    },\n\n    checkIsTokenExists() {\n        return !!localStorage.auth\n    },\n\n    refreshToken() {\n        return fetch(buildUri(URI_REFRESH_TOKEN), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            body: qs.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: JSON.parse(localStorage.auth).refresh_token\n            })\n        }).then(checkResponseStatus)\n            .then(this.writeToken)\n            .catch(() => {\n                throw new Error(\"Unable to refresh!\")\n            })\n    },\n\n    checkAuthEndpoint() {\n        return fetchWrapper(buildUri('/api/checkAuth'))\n    }\n};","import PathService from \"../Path/PathService\";\nimport ToolBarService from \"../ToolBar/ToolBarService\";\nimport RoleService from \"../Role/RoleService\";\nimport AuthService from \"../Auth/AuthService\";\n\nconst toolBarService = new ToolBarService();\n\nexport default {\n    getToolBarProps(userDetails, appInfo, logoutHandler) {\n        const topItems = toolBarService.getTopToolBarItems(userDetails.role)\n        const bottomItems = toolBarService.getBottomToolBarItems(userDetails.role)\n        const logoutItemProps = toolBarService.getLogoutItemProps(logoutHandler)\n        const loginItemProps = toolBarService.getLoginItemProps(PathService.login())\n\n        return {\n            brandItemProps: {\n                appName: appInfo.name.toLowerCase(),\n            },\n            logoutItemProps,\n            loginItemProps,\n            topItems,\n            bottomItems,\n            statusBarProps: {\n                appInfo,\n            },\n            isPathActive: PathService.isPathActive\n        }\n    },\n\n    getLoginFormProps(userDetails, loginHandler, inputChangeHandler) {\n        return {\n            userDetails: userDetails,\n            error: null,\n            onSubmit: loginHandler,\n            inputChangeHandler: inputChangeHandler\n        }\n    },\n\n    getInitialUserDetails() {\n        return {\n            username: '',\n            password: '',\n            role: AuthService.getCurrentRole() || RoleService.anonymous(),\n            isAuthenticated: false\n        }\n    },\n\n    isProdEnv() {\n        return !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\n    }\n}","import {\n    faBox,\n    faCalendarAlt,\n    faCog,\n    faHome,\n    faSignInAlt,\n    faSignOutAlt,\n    faUserTie,\n    faWallet\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PathService from \"../Path/PathService\";\nimport RoleService from \"../Role/RoleService\";\nimport history from \"../../history\";\n\nexport default class ToolBarService {\n\n    getLoginItemProps = (href, label = 'Войти') => {\n        return {\n            id: 'authenticationItem',\n            label,\n            faIcon: faSignInAlt,\n            onClick: () => history.push(href),\n            className: 'login'\n        }\n    }\n\n    getLogoutItemProps = (onLogOut, label = 'Выйти') => {\n        return {\n            id: 'logout',\n            label,\n            faIcon: faSignOutAlt,\n            onClick: onLogOut,\n            className: 'logout',\n        }\n    };\n\n    getToolBarLogOutItemProps = (onLogOut, label = 'Выйти') => {\n        return {\n            id: 'logout',\n            label,\n            faIcon: faSignOutAlt,\n            onClick: onLogOut,\n            className: 'text-danger',\n        }\n    };\n\n    getTopToolBarItems = (role) => {\n        const ids = {\n            HOME: 'home',\n            CLIENTS: 'clients',\n            OPERATIONS: 'operations',\n            WORKERS: 'workers',\n            CALENDAR: 'calendar',\n        }\n\n        const items = [\n            {\n                id: ids.HOME,\n                label: 'Главная',\n                href: PathService.home(),\n                faIcon: faHome,\n            },\n            {\n                id: ids.CLIENTS,\n                label: 'Клиенты',\n                href: PathService.clients(),\n                faIcon: faWallet,\n            },\n            {\n                id: ids.OPERATIONS,\n                label: 'Операции',\n                href: PathService.operations(),\n                faIcon: faBox,\n            },\n            {\n                id: ids.WORKERS,\n                label: 'Сотрудники',\n                href: PathService.workers(),\n                faIcon: faUserTie,\n            },\n            {\n                id: ids.CALENDAR,\n                label: 'Календарь',\n                href: PathService.calendar(),\n                faIcon: faCalendarAlt,\n            },\n        ];\n\n        switch (role) {\n            case RoleService.admin():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.OPERATIONS,\n                    ids.WORKERS)\n            case RoleService.manager():\n                return this.filterItemsByIds(items,\n                    ids.HOME,\n                    ids.CLIENTS,\n                    ids.CALENDAR,\n                    ids.OPERATIONS)\n            case RoleService.anonymous():\n                return this.filterItemsByIds(items,\n                    ids.HOME)\n            default:\n                return []\n        }\n    }\n\n    getBottomToolBarItems = (role) => {\n        return role !== RoleService.anonymous() ? [\n            {\n                id: 'settings',\n                label: 'Настройки',\n                href: PathService.settings(),\n                faIcon: faCog,\n                forceShowIcon: true,\n            },\n        ] : []\n    }\n\n    filterItemsByIds = (items = [], ...ids) => {\n        return items.filter(it => ids.includes(it.id))\n    }\n}","import React from \"react\";\n\nimport classNames from \"classnames\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport \"./ToolBarItem.css\"\nimport {Link} from \"react-router-dom\";\n\nconst ToolBarItem = ({href, label, isActive, faIcon, forceShowIcon}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', {\n                'active': isActive\n            }\n        )\n\n    return (\n        <Link to={href} className={getClassNames()}>\n            <FontAwesomeIcon icon={faIcon}/>{label}\n        </Link>\n    )\n}\n\nexport default ToolBarItem;","import React from \"react\";\nimport \"./ToolBarBrandItem.css\";\nimport classNames from \"classnames\";\n\nconst ToolBarBrandItem = ({appName = 'App'}) => {\n\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'brand', 'noselect')\n\n    return (\n        <div className={getClassNames()}>\n            <span>{appName}</span>\n        </div>\n    )\n};\n\nexport default ToolBarBrandItem;","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ToolbarAuthenticationItem.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst ToolbarAuthenticationItem = ({label, faIcon, onClick, className}) => {\n    const getClassNames = () =>\n        classNames('tool-bar-item', 'toolbar-authentication-item', ...className)\n\n    return (\n        <div className={getClassNames()} onClick={onClick}>\n            <FontAwesomeIcon icon={faIcon}/> {label}\n        </div>\n    )\n};\n\nexport default ToolbarAuthenticationItem","import React from \"react\";\nimport \"./StatusBar.css\";\n\nconst StatusBar = ({appInfo}) => {\n    return (\n        <div className=\"status-bar\">\n            <div className=\"left\">\n                v. {appInfo.version}\n            </div>\n        </div>\n    )\n};\n\nexport default StatusBar","import {createContext} from \"react\";\nimport RoleService from \"../services/Role/RoleService\";\n\nexport const UserDetailsContext = createContext({\n    username: '',\n    role: RoleService.anonymous(),\n    isAuthenticated: false,\n});","import React, {useContext} from \"react\";\nimport \"./ToolBar.css\"\nimport PropTypes from 'prop-types';\nimport ToolBarItem from \"../ToolBarItem/ToolBarItem\";\nimport ToolBarBrandItem from \"../ToolBarBrandItem/ToolBarBrandItem\";\nimport ToolbarAuthenticationItem from \"../ToolBarLogOutItem/ToolbarAuthenticationItem\";\nimport {useLocation} from \"react-router-dom\";\nimport StatusBar from \"../../StatusBar/StatusBar\";\nimport {UserDetailsContext} from \"../../../contexts/UserDetailsContext\";\n\nconst ToolBar = (props) => {\n\n    const {\n        brandItemProps,\n        loginItemProps,\n        logoutItemProps,\n        statusBarProps,\n        topItems,\n        bottomItems,\n        isPathActive,\n    } = props;\n\n    const activePath = useLocation().pathname;\n    const userDetails = useContext(UserDetailsContext)\n\n    const transformToolBarItems = (toolBarItems) =>\n        toolBarItems.map(itemProps =>\n            <ToolBarItem key={itemProps.id} {...itemProps} isActive={isPathActive(itemProps.href, activePath)}/>\n        );\n\n    const authenticationItemProps = userDetails.isAuthenticated ? logoutItemProps : loginItemProps\n\n    return (\n        <div className=\"vertical-menu shadow\">\n\n            <ToolBarBrandItem {...brandItemProps} />\n            {\n                transformToolBarItems(topItems)\n            }\n            <div className=\"bottom-container\">\n                {\n                    transformToolBarItems(bottomItems)\n                }\n\n                <ToolbarAuthenticationItem {...authenticationItemProps}/>\n\n                <StatusBar {...statusBarProps}/>\n            </div>\n        </div>\n    );\n};\n\nToolBar.propTypes = {\n    brandItemProps: PropTypes.object,\n    logOutItemProps: PropTypes.object,\n    isAuthenticated: PropTypes.bool,\n    topItems: PropTypes.arrayOf(PropTypes.object),\n    bottomItems: PropTypes.arrayOf(PropTypes.object),\n    appInfo: PropTypes.object,\n}\n\nexport default ToolBar;","import React from \"react\";\nimport {Breadcrumb} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst NavigationBreadcrumb = ({items = []}) => {\n\n    if (!items || items.length === 0) {\n        return null\n    }\n\n    const transformedItems = items.map((it, i) => (\n        <Breadcrumb.Item active={i === items.length - 1}\n                         key={i}\n                         linkAs={Link}\n                         linkProps={{to: it.href}}>{it.label}</Breadcrumb.Item>\n    ))\n\n    return (\n        <Breadcrumb>\n            {\n                transformedItems\n            }\n        </Breadcrumb>\n    )\n}\n\nexport default NavigationBreadcrumb","import React from \"react\";\n\nimport \"./DefaultPage.css\"\nimport NavigationBreadcrumb from \"../NavigationBreadcrumb/NavigationBreadcrumb\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\n\nconst DefaultPage = ({title, icon, breadcrumbItems = [], children}) => {\n    return (\n        <div className=\"default-page\">\n\n            {\n                title ? (\n                    <div className=\"title\">\n                        <h2>\n                            <span className=\"text-primary\">\n                                <FontAwesomeIcon icon={icon || faCheck}/>\n                            </span> {title}\n                        </h2>\n                    </div>\n                ) : null\n            }\n\n            {\n                breadcrumbItems.length ? (\n                    <div className=\"mt-4\">\n                        <NavigationBreadcrumb items={breadcrumbItems}/>\n                    </div>\n                ) : null\n            }\n\n            {children}\n        </div>\n    )\n};\n\nexport default DefaultPage","import React from \"react\";\n\nimport \"./Panel.css\";\n\nconst Panel = ({children}) => {\n    return (\n        <div className=\"panel\">\n            {\n                children\n            }\n        </div>\n    )\n}\n\nexport default Panel;","import {createContext} from \"react\";\n\nexport const PathServiceContext = createContext(null)","import React, {useContext} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\n\nconst RouteWrapper = ({children, roles, ...rest}) => {\n\n    const userDetails = useContext(UserDetailsContext);\n    const PathService = useContext(PathServiceContext);\n\n    const isRoleAppropriate = (role, roles) => roles.includes(role);\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isRoleAppropriate(userDetails.role, roles) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: PathService.login(),\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n\n};\n\nexport default RouteWrapper\n\nRouteWrapper.defaultProps = {\n    roles: [],\n}","import React from \"react\";\nimport \"./LoginForm.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n    const {\n        title,\n        onSubmit,\n        recoverPasswordPathname,\n        userDetails,\n        onInputChange\n    } = props;\n\n    return (\n        <DefaultPage>\n            <div className=\"login-form shadow\">\n\n                <div className=\"title\">\n                    <h2>{title}</h2>\n                </div>\n\n                <Form onSubmit={onSubmit}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Введите имя пользователя:</Form.Label>\n                        <Form.Control type=\"text\"\n                                      name=\"username\"\n                                      value={userDetails.username}\n                                      onChange={onInputChange}\n                                      autoComplete=\"username\"\n                                      placeholder=\"Имя пользователя\"/>\n                        <Form.Text className=\"text-muted\">\n                            Мы заботимся о конфеденциальности Ваших данных.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Введите пароль:</Form.Label>\n                        <Form.Control type=\"password\"\n                                      name=\"password\"\n                                      value={userDetails.password}\n                                      onChange={onInputChange}\n                                      autoComplete=\"current-password\"\n                                      placeholder=\"Пароль\"/>\n                        <Form.Text>\n                            <Link to={recoverPasswordPathname}>Забыли пароль?</Link>\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Подтвердить\n                    </Button>\n                </Form>\n            </div>\n        </DefaultPage>\n    )\n}\n\nLoginForm.defaultProps = {\n    title: 'Login form',\n    onSubmit: (e) => e.preventDefault(),\n    recoverPasswordPathname: '/recoverPassword',\n    userDetails: {\n        username: '',\n        password: ''\n    },\n    onInputChange: () => {\n    }\n}\n\nexport default LoginForm","import React from \"react\";\nimport \"./ClientCard.css\";\nimport classNames from \"classnames\"\nimport {Link} from \"react-router-dom\";\n\nconst ClientCard = (props) => {\n    const {\n        id,\n        shortName,\n        paymentInfo = {},\n        webSite,\n        phone,\n        email,\n        isActive\n    } = props\n\n    const className = classNames('client-card', 'shadow', {\n        'active': isActive\n    })\n\n    return (\n        <div className={className}>\n            <div className=\"title\">\n                <Link to={`${id}`}>\n                    <h3>{shortName}</h3>\n                </Link>\n            </div>\n            <hr/>\n            <div className=\"body\">\n                <div className=\"item\">\n                    УНП: {paymentInfo.payerAccountNumber}\n                </div>\n                <div className=\"item\">\n                    Тел.: <a href={`tel:${phone}`}>{phone}</a>\n                </div>\n                <div className=\"item\">\n                    E-mail: <a href={`mailto:${email}`}>{email}</a>\n                </div>\n                <div className=\"item\">\n                    Веб-сайт: <a href={webSite}>{webSite}</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClientCard\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\nconst RowDataTransformer = ({data = [], CardComponent}) => {\n\n    const reshapeDataArr = (data) => {\n        let resultArr = [];\n\n        if (Array.isArray(data)) {\n            let dataArrCopy = [...data]\n            while (dataArrCopy.length) {\n                resultArr.push(dataArrCopy.splice(0, 3))\n            }\n        }\n\n        return resultArr;\n    }\n\n    const transformDataArr = (data) => {\n        return reshapeDataArr(data).map((row, i) => (\n            <Row key={i}>\n                {\n                    row.map((col, i) => (\n                        <Col key={i} lg={4}>\n                            <CardComponent key={col.id} {...col}/>\n                        </Col>\n                    ))\n                }\n            </Row>\n        ))\n    };\n\n    return (\n        <>{transformDataArr(data)}</>\n    )\n};\n\nexport default RowDataTransformer","import React from \"react\";\n\nimport \"./Loader.css\"\nimport loaderIcon from \"./Dual Ball-0.9s-200px.svg\"\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <img src={loaderIcon} alt=\"loading..\"/>\n        </div>\n    )\n};\n\nexport default Loader","import React, {useContext} from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {faExclamationCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {Link} from \"react-router-dom\";\n\nconst AlertDanger = ({title, text, setShow, redirectPath}) => {\n\n    const PathService = useContext(PathServiceContext)\n\n    const isDismissible = typeof setShow !== \"undefined\"\n    const onClose = isDismissible ? () => setShow(false) : () => {\n    }\n\n    return (\n        <Alert variant=\"danger\"\n               onClose={onClose}\n               dismissible={isDismissible}>\n            <Alert.Heading>\n                <FontAwesomeIcon icon={faExclamationCircle}/> {title}\n            </Alert.Heading>\n            <div>\n                {\n                    text\n                }\n                <hr/>\n                <div>\n                    Вы можете вернуться на <Alert.Link\n                    as={Link}\n                    to={redirectPath || PathService.home()}\n                >главную</Alert.Link> страницу.\n                </div>\n            </div>\n        </Alert>\n    );\n}\n\nAlertDanger.defaultProps = {\n    title: \"Во время последней операции произошла ошибка.\",\n    text: 'Наша команда уже работает над решением возникшей проблемы.',\n}\n\nexport default AlertDanger","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport AlertDanger from \"../AlertDanger/AlertDanger\";\n\nconst WithDataWrapper = (props) => {\n    const {getData, filterData, Component} = props\n\n    const {id} = useParams()\n\n    const [data, setData] = useState(null)\n    const [hasLoaded, setLoaded] = useState(false)\n    const [hasError, setError] = useState(false)\n\n    const getDataWrapper = useCallback(() => {\n        const onSuccess = (data) => {\n            setError(false)\n            setData(data)\n            setLoaded(true)\n        }\n        const onError = (error) => {\n            console.error(error)\n            setError(true)\n            setLoaded(true)\n        }\n        if (id) {\n            getData(id)\n                .then(onSuccess)\n                .catch(onError)\n        } else {\n            getData()\n                .then(onSuccess)\n                .catch(onError)\n        }\n    }, [getData, id])\n\n    const reload = (newData) => {\n        if (newData) {\n            setData(newData)\n        } else {\n            getDataWrapper()\n        }\n    }\n\n    useEffect(() => {\n        getDataWrapper()\n    }, [getDataWrapper])\n\n    if (!hasLoaded) {\n        return <Loader/>\n    }\n\n    if (hasError) {\n        return <AlertDanger/>\n    }\n\n    return (\n        <Component {...props}\n                   reload={reload}\n                   data={filterData(data)}/>\n    )\n}\n\nWithDataWrapper.propTypes = {\n    getData: PropTypes.func,\n    filterData: PropTypes.func,\n    Component: PropTypes.elementType\n}\n\nWithDataWrapper.defaultProps = {\n    filterData: (data) => data\n}\n\nexport default WithDataWrapper;\n\n","import React, {useContext} from \"react\";\nimport \"./ClientsPage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport ClientCard from \"../ClientCard/ClientCard\";\nimport RowDataTransformer from \"../RowDataContainer/RowDataTransformer\";\nimport PropTypes from \"prop-types\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faLongArrowAltDown, faLongArrowAltUp, faWallet} from \"@fortawesome/free-solid-svg-icons\";\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Button, Col, Row} from \"react-bootstrap\";\n\nconst ClientsPage = (props) => {\n    const {\n        title,\n        filterData,\n        getData,\n    } = props\n\n    const PathService = useContext(PathServiceContext)\n\n    return (\n        <DefaultPage title={title}\n                     icon={faWallet}\n                     breadcrumbItems={[\n                         PathService.breadcrumbs().home(),\n                         PathService.breadcrumbs().clients(),\n                     ]}>\n            <div className=\"clients-page\">\n\n                <Row>\n                    <Col className=\"text-right\">\n                        <Button variant=\"primary\"\n                                className=\"mr-2\">\n                            Сортировать по имени <FontAwesomeIcon icon={faLongArrowAltDown}/>\n                            <FontAwesomeIcon icon={faLongArrowAltUp}/>\n                        </Button>\n                        <Link to={PathService.newClient()}\n                              className=\"btn btn-success\">\n                            Новый клиент\n                        </Link>\n                    </Col>\n                </Row>\n\n                <WithDataWrapper\n                    getData={getData}\n                    filterData={filterData}\n                    Component={RowDataTransformer}\n                    CardComponent={ClientCard}\n                />\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nClientsPage.propTypes = {\n    title: PropTypes.string,\n    data: PropTypes.array,\n}\n\nClientsPage.defaultProps = {\n    title: '',\n    data: [],\n}\n\nexport default ClientsPage\n\n\n","import React, {useContext} from \"react\";\nimport \"./HomePage.css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faHome} from \"@fortawesome/free-solid-svg-icons\";\nimport {Jumbotron} from \"react-bootstrap\";\n\nconst HomePage = ({title}) => {\n    const PathService = useContext(PathServiceContext);\n\n    return (\n        <DefaultPage title={title}\n                     icon={faHome}\n                     breadcrumbItems={[PathService.breadcrumbs().home()]}>\n            <div className=\"home-page\">\n                <div className=\"text-light\">\n                    <Jumbotron>\n                        <h1>Добро пожаловать!</h1>\n                        <p>\n                            This is a simple hero unit, a simple jumbotron-style component for calling\n                            extra attention to featured content or information.\n                        </p>\n                    </Jumbotron>\n                </div>\n\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default HomePage","import React from \"react\";\nimport \"./ClientInfo.css\";\nimport Loader from \"../Loader/Loader\";\n\nconst WithClientInfoWrapper = (props) => {\n    const {id = '', data, title = '', Component} = props;\n    const buildId = (postfix, prefix = id) => prefix + postfix;\n\n    if (!data) {\n        return <Loader/>\n    }\n\n    return (\n        <div className=\"client-info\">\n            <div className=\"title\">\n                <h4>\n                    {title}\n                </h4>\n            </div>\n            <Component buildId={buildId} {...props}/>\n        </div>\n    )\n}\n\nexport default WithClientInfoWrapper","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\n\nconst ClientGeneralInfo = ({data, readonly, onInputChange}) => {\n    return (\n        <div className=\"client-general-info\">\n            <Form.Row>\n                <Form.Group as={Col} lg={4} controlId=\"shortName\">\n                    <Form.Label>Краткое наименование</Form.Label>\n                    <Form.Control name=\"shortName\"\n                                  required\n                                  value={data.shortName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите краткое наименование\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"fullName\">\n                    <Form.Label>Полное наименование</Form.Label>\n                    <Form.Control name=\"fullName\"\n                                  required\n                                  value={data.fullName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите полное наименование\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name=\"email\"\n                                  value={data.email}\n                                  disabled={readonly}\n                                  type=\"email\"\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите email\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"phone\">\n                    <Form.Label>Телефон</Form.Label>\n                    <Form.Control name=\"phone\"\n                                  required\n                                  value={data.phone}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Телефон\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"fax\">\n                    <Form.Label>Факс</Form.Label>\n                    <Form.Control name=\"fax\"\n                                  value={data.fax}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Факс\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientGeneralInfo","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\nimport countryList from \"react-select-country-list\";\n\nconst ClientAddressInfo = ({data, buildId, onInputChange, readonly}) => {\n    const countries = countryList().getData() || []\n\n    return (\n        <div className=\"client-address-info\">\n            <Form.Group controlId={buildId(\"addressString\")}>\n                <Form.Label>Адрес</Form.Label>\n                <Form.Control\n                    name=\"addressString\"\n                    required\n                    value={data.addressString}\n                    disabled={readonly}\n                    onChange={onInputChange}\n                    placeholder=\"Введите адрес\"/>\n            </Form.Group>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId={buildId(\"city\")}>\n                    <Form.Label>Город</Form.Label>\n                    <Form.Control\n                        name=\"city\"\n                        value={data.city}\n                        required\n                        disabled={readonly}\n                        onChange={onInputChange}\n                        placeholder=\"Введите город\"\n                    />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId={buildId(\"countryISO2code\")}>\n                    <Form.Label>Страна</Form.Label>\n                    <Form.Control as=\"select\"\n                                  required\n                                  name=\"countryISO2code\"\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  value={data.countryISO2code}>\n                        {\n                            countries.map((it, i) => (\n                                <option key={i} value={it.value}>{it.label}</option>\n                            ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={3} controlId={buildId(\"postcode\")}>\n                    <Form.Label>Индекс</Form.Label>\n                    <Form.Control\n                        name=\"postcode\"\n                        required\n                        value={data.postcode}\n                        disabled={readonly}\n                        onChange={onInputChange}\n                        placeholder=\"Индекс\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientAddressInfo","import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\n\nconst ClientPaymentInfo = ({data, onInputChange, readonly}) => {\n    return (\n        <div className=\"client-payment-info\">\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"bankName\">\n                    <Form.Label>Наименование банка</Form.Label>\n                    <Form.Control name=\"bankName\"\n                                  required\n                                  value={data.bankName}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите наименование банка\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={6} sm={12} controlId=\"bankIdentificationCode\">\n                    <Form.Label>Банковский Идентификационный Код (БИК)</Form.Label>\n                    <Form.Control name=\"bankIdentificationCode\"\n                                  required\n                                  value={data.bankIdentificationCode}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите БИК\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"checkingAccountNumber\">\n                    <Form.Label>Рассчетный счёт</Form.Label>\n                    <Form.Control name=\"checkingAccountNumber\"\n                                  required\n                                  value={data.checkingAccountNumber}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите рассчетный счёт\"/>\n                </Form.Group>\n\n                <Form.Group as={Col} lg={6} sm={12} controlId=\"payerAccountNumber\">\n                    <Form.Label>Уникальный Номер Плательщика (УНП)</Form.Label>\n                    <Form.Control name=\"payerAccountNumber\"\n                                  required\n                                  value={data.payerAccountNumber}\n                                  disabled={readonly}\n                                  onChange={onInputChange}\n                                  placeholder=\"Введите УНП\"/>\n                </Form.Group>\n            </Form.Row>\n        </div>\n    )\n}\n\nexport default ClientPaymentInfo","import React from \"react\";\nimport {OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nconst TooltipWrapper = ({id, label, placement = 'top', delay = {show: 50, hide: 50}, children}) => {\n    const generateRandomId = () => {\n        return Math.round(Math.random() * 10)\n    }\n\n    if (!label) {\n        return children\n    }\n\n    return (\n        <OverlayTrigger\n            placement={placement}\n            delay={delay}\n            overlay={\n                <Tooltip id={id || generateRandomId()}>\n                    {label}\n                </Tooltip>\n            }>\n            {\n                children\n            }\n        </OverlayTrigger>\n    );\n}\n\nexport default TooltipWrapper","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst ButtonBar = ({buttons}) => {\n\n    return (\n        <div className=\"float-right\">\n            {\n                buttons.map(btn => (\n                    <TooltipWrapper key={btn.id} label={btn.tooltip}>\n                        <Button {...btn} className=\"ml-2\">\n                            <FontAwesomeIcon icon={btn.icon}/> {btn.label}\n                        </Button>\n                    </TooltipWrapper>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default ButtonBar","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\n\nconst AlertSuccess = ({title, setShow}) => {\n    return (\n        <Alert variant=\"success\"\n               onClose={() => setShow(false)}\n               dismissible>\n            <Alert.Heading>\n                <FontAwesomeIcon icon={faCheck}/> {title}\n            </Alert.Heading>\n        </Alert>\n    )\n}\n\nexport default AlertSuccess","export const onInputChange = (target, object) => {\n    if (object.hasOwnProperty(target.name)) {\n        const objectCopy = {...object}\n        objectCopy[target.name] = target.value\n        return objectCopy\n    }\n    console.error('Unknown property', target.name, object)\n}","export const joinClassNames = (...classNames) => classNames.join(' ');\nexport const formatDate = date => new Date(date).toLocaleDateString();\nexport const getISODateString = (date = new Date()) => date.toISOString().split('T')[0]","import React from \"react\";\nimport \"./MeetingForm.css\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {getISODateString} from \"../../utils/utils\";\n\nconst MeetingForm = ({meeting, onSubmit, onChange}) => {\n    const {client, date, title} = meeting\n\n    return (\n        <div className=\"meeting-form shadow-m rounded\">\n            <div className=\"title\">\n                <h4>Новая встреча с клиентом:</h4>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"client\">\n                        <Form.Label>Клиент</Form.Label>\n                        <Form.Control type=\"text\"\n                                      required\n                                      value={client.shortName}\n                                      readOnly/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"date\">\n                        <Form.Label>Дата и время</Form.Label>\n                        <Form.Control type=\"date\"\n                                      name=\"date\"\n                                      value={date}\n                                      required\n                                      min={getISODateString()}\n                                      onChange={onChange}\n                                      placeholder=\"Выберите дату и время\"/>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridAddress1\">\n                    <Form.Label>Название встречи</Form.Label>\n                    <Form.Control name=\"title\"\n                                  value={title}\n                                  required\n                                  onChange={onChange}\n                                  placeholder=\"Введите название встречи\"/>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"success\">\n                    <FontAwesomeIcon icon={faSave}/> Сохранить\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default MeetingForm","import React, {useContext, useState} from \"react\";\nimport MeetingForm from \"../MeetingForm/MeetingForm\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\";\nimport {onInputChange} from \"../../handlers/inputHandlers\";\nimport ApiService from \"../../services/Api/ApiService\";\n\nconst MeetingFormWrapper = ({client, setShow, showSuccessAlert, showErrorAlert}) => {\n    const {id: userId} = useContext(UserDetailsContext)\n\n    const [meeting, setMeeting] = useState({\n        client: {\n            id: client.id,\n            shortName: client.shortName\n        },\n        user: {\n            id: userId\n        },\n        date: '',\n        title: '',\n    })\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        ApiService.saveMeeting(meeting)\n            .then(() => {\n                setShow(false)\n                showErrorAlert(false)\n                showSuccessAlert(true)\n            })\n            .catch((e) => {\n                console.error(e)\n                showSuccessAlert(false)\n                showErrorAlert({hasError: true})\n            })\n    }\n\n    return (\n        <MeetingForm meeting={meeting}\n                     onSubmit={onSubmit}\n                     onChange={({target}) => setMeeting(onInputChange(target, meeting))}/>\n    )\n}\n\nMeetingFormWrapper.defaultProps = {\n    showSuccessAlert: () => {\n    },\n    showErrorAlert: () => {\n    }\n}\n\nexport default MeetingFormWrapper","import React, {useContext, useEffect, useState} from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\nimport {faBan, faCalendarAlt, faPen, faSave, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport WithClientInfoWrapper from \"../ClientInfo/WithClientInfoWrapper\";\nimport ClientGeneralInfo from \"../ClientInfo/ClientGeneralInfo\";\nimport ClientAddressInfo from \"../ClientInfo/ClientAddressInfo\";\nimport ClientPaymentInfo from \"../ClientInfo/ClientPaymentInfo\";\nimport ButtonBar from \"../ButtonBar/ButtonBar\";\nimport ApiService from \"../../services/Api/ApiService\";\nimport AlertSuccess from \"../AlertSuccess/AlertSuccess\";\nimport AlertDanger from \"../AlertDanger/AlertDanger\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport history from \"../../history\";\nimport {onInputChange} from \"../../handlers/inputHandlers\";\nimport MeetingFormWrapper from \"../MeetingFormWrapper/MeetingFormWrapper\";\n\nconst ClientDetailsForm = ({data, reload, onMount}) => {\n\n    const PathService = useContext(PathServiceContext)\n\n    const modes = {\n        show: 'show',\n        edit: 'edit',\n        create: 'create'\n    }\n\n    const INITIAL_ERROR_STATE = {hasError: false, message: ''}\n\n    const [generalInfo, setGeneralInfo] = useState(data)\n    const [legalAddressInfo, setLegalAddressInfo] = useState(data.legalAddress)\n    const [mailingAddressInfo, setMailingAddressInfo] = useState(data.mailingAddress)\n    const [paymentInfo, setPaymentInfo] = useState(data.paymentInfo)\n    const [mode, setMode] = useState(modes.show)\n    const [showAlertSuccess, setShowAlertSuccess] = useState(false)\n    const [showMeetingForm, setSetShowMeetingForm] = useState(false)\n    const [error, setError] = useState(INITIAL_ERROR_STATE)\n\n    useEffect(() => {\n        onMount(data)\n        if (!data.id && mode !== modes.create) {\n            setMode(modes.create)\n        }\n    }, [onMount, data, mode, modes.create])\n\n    const isShowMode = (modeName) => modes[modeName] && modes[modeName] === modes.show\n    const isEditMode = (modeName) => modes[modeName] && modes[modeName] === modes.edit\n    const isCreateMode = (modeName) => modes[modeName] && modes[modeName] === modes.create\n\n    const equals = (obj1, obj2) => {\n        return Object.entries(obj1).toString() === Object.entries(obj2).toString()\n    }\n\n    const hideAlertDanger = () => {\n        setError(INITIAL_ERROR_STATE)\n    }\n\n    const clientNotChanged = () =>\n        equals(data, generalInfo) &&\n        equals(data.legalAddress, legalAddressInfo) &&\n        equals(data.mailingAddress, mailingAddressInfo) &&\n        equals(data.paymentInfo, paymentInfo)\n\n\n    const onSubmitWrapper = (e) => {\n        e.preventDefault()\n\n        const onSuccess = (response) => {\n            hideAlertDanger()\n            setShowAlertSuccess(true)\n            setMode(modes.show)\n            window.scrollTo(0, 0)\n            response.json()\n                .then(reload)\n        }\n\n        const onError = (e) => {\n            console.error(e)\n            if (e.response) {\n                e.response.json()\n                    .then(json => {\n                        console.error(json.message);\n                        setError({\n                            hasError: true,\n                            message: json.message\n                        })\n                    })\n                    .catch(console.error)\n            }\n            setShowAlertSuccess(false)\n        }\n\n        if (!isShowMode(mode)) {\n            const client = {\n                ...generalInfo,\n                legalAddress: legalAddressInfo,\n                mailingAddress: mailingAddressInfo,\n                paymentInfo: paymentInfo\n            }\n\n            if (isCreateMode(mode)) {\n                ApiService.saveClient(client)\n                    .then(response => response.json()\n                        .then(({id}) =>\n                            history.push(PathService.buildPathToClient(id))))\n                    .catch(onError)\n\n            } else if (isEditMode(mode)) {\n                ApiService.updateClient(client.id, client)\n                    .then(onSuccess)\n                    .catch(onError)\n            }\n        }\n    }\n\n    const getButtons = () => {\n        if (isShowMode(mode)) {\n            return [\n                {\n                    id: 'meeting',\n                    variant: 'primary',\n                    type: 'button',\n                    icon: faCalendarAlt,\n                    tooltip: '',\n                    label: 'Запланировать встречу',\n                    onClick: () => setSetShowMeetingForm(!showMeetingForm),\n                },\n                {\n                    id: 'edit',\n                    variant: 'secondary',\n                    type: 'button',\n                    icon: faPen,\n                    tooltip: '',\n                    label: 'Изменить',\n                    onClick: () => setMode(modes.edit),\n                },\n                {\n                    id: 'delete',\n                    variant: 'outline-danger',\n                    type: 'button',\n                    icon: faTrashAlt,\n                    tooltip: 'Удалить',\n                    label: '',\n                },\n            ]\n        } else {\n            return [\n                {\n                    id: 'edit',\n                    variant: \"success\",\n                    type: \"submit\",\n                    icon: faSave,\n                    disabled: clientNotChanged(),\n                    tooltip: '',\n                    label: 'Сохранить',\n                },\n                {\n                    id: 'cancel',\n                    variant: \"outline-secondary\",\n                    type: \"reset\",\n                    icon: faBan,\n                    label: '',\n                    tooltip: 'Отменить',\n                    onClick: onCancel,\n                },\n            ]\n        }\n    }\n\n    const onCancel = () => {\n        setMode(modes.show)\n        setGeneralInfo(data)\n        setLegalAddressInfo(data.legalAddress)\n        setMailingAddressInfo(data.mailingAddress)\n        setPaymentInfo(data.paymentInfo)\n        setShowAlertSuccess(false)\n        hideAlertDanger()\n    }\n\n    const onGeneralInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, generalInfo);\n        if (copy) {\n            setGeneralInfo(copy)\n        }\n    }\n\n    const onLegalAddressInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, legalAddressInfo);\n        if (copy) {\n            setLegalAddressInfo(copy)\n        }\n    }\n\n    const onMailingAddressInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, mailingAddressInfo);\n        if (copy) {\n            setMailingAddressInfo(copy)\n        }\n    }\n\n    const onPaymentInfoInputChange = ({target}) => {\n        const copy = onInputChange(target, paymentInfo);\n        if (copy) {\n            setPaymentInfo(copy)\n        }\n    }\n\n    const readonly = isShowMode(mode);\n\n    return (\n        <div className=\"client-details-view\">\n\n            {\n                showAlertSuccess ? (\n                    <AlertSuccess title=\"Данные успешно сохранены!\"\n                                  setShow={setShowAlertSuccess}/>\n                ) : null\n            }\n\n            {\n                error.hasError ? (\n                    <AlertDanger text={error.message}\n                                 setShow={hideAlertDanger}/>\n                ) : null\n            }\n\n            {\n                showMeetingForm ? (\n                    <MeetingFormWrapper client={generalInfo}\n                                        showSuccessAlert={setShowAlertSuccess}\n                                        showErrorAlert={setError}\n                                        setShow={setSetShowMeetingForm}/>\n                ) : null\n            }\n\n            <Form onSubmit={(e) => onSubmitWrapper(e)}>\n                <ButtonBar buttons={getButtons()}/>\n\n                <WithClientInfoWrapper\n                    title=\"Общая информация:\"\n                    data={generalInfo}\n                    readonly={readonly}\n                    onInputChange={onGeneralInfoInputChange}\n                    Component={ClientGeneralInfo}\n                />\n\n                <Row>\n                    <Col>\n                        <WithClientInfoWrapper\n                            title=\"Юридический адрес:\"\n                            id=\"legalAddress\"\n                            data={legalAddressInfo}\n                            readonly={readonly}\n                            onInputChange={onLegalAddressInfoInputChange}\n                            Component={ClientAddressInfo}\n                        />\n                    </Col>\n                    <Col>\n                        <WithClientInfoWrapper\n                            title=\"Почтовый адрес:\"\n                            id=\"mailingAddress\"\n                            data={mailingAddressInfo}\n                            readonly={readonly}\n                            onInputChange={onMailingAddressInfoInputChange}\n                            Component={ClientAddressInfo}\n                        />\n                    </Col>\n                </Row>\n\n                <WithClientInfoWrapper\n                    title=\"Платежная информация:\"\n                    id=\"paymentInfo\"\n                    data={paymentInfo}\n                    readonly={readonly}\n                    onInputChange={onPaymentInfoInputChange}\n                    Component={ClientPaymentInfo}\n                />\n            </Form>\n        </div>\n    )\n}\n\nClientDetailsForm.defaultProps = {\n    data: {\n        shortName: \"\",\n        fullName: \"\",\n        phone: \"\",\n        email: \"\",\n        fax: \"\",\n        legalAddress: {\n            addressString: \"\",\n            city: \"\",\n            countryISO2code: \"BY\",\n            postcode: \"\",\n        },\n        mailingAddress: {\n            addressString: \"\",\n            city: \"\",\n            countryISO2code: \"BY\",\n            postcode: \"\",\n        },\n        paymentInfo: {\n            bankIdentificationCode: \"\",\n            bankName: \"\",\n            checkingAccountNumber: \"\",\n            payerAccountNumber: \"\",\n        }\n    }\n}\n\nexport default ClientDetailsForm","import React, {useContext, useState} from \"react\";\nimport \"./ClientDetails..css\";\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport WithDataWrapper from \"../WithDataWrapper/WithDataWrapper\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport ClientDetailsForm from \"../ClientDetailsForm/ClientDetailsForm\";\nimport {faWallet} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ClientDetails = (props) => {\n    const {getData} = props\n    const PathService = useContext(PathServiceContext);\n\n    const [title, setTitle] = useState('Загрузка...')\n    const [breadcrumbItems, setBreadcrumbItems] = useState([\n        PathService.breadcrumbs().home(),\n        PathService.breadcrumbs().clients(),\n        PathService.breadcrumbs().client('', 'Загрузка...'),\n    ])\n\n    const onViewMounted = (data) => {\n        const newTitle = data.id ? data.shortName : props.title\n\n        if (title !== newTitle) {\n            setTitle(newTitle)\n        }\n\n        const breadcrumbItemsCopy = [...breadcrumbItems]\n        const indexOfLastElement = breadcrumbItemsCopy.length - 1;\n\n        if (breadcrumbItemsCopy[indexOfLastElement].label !== newTitle) {\n            breadcrumbItemsCopy[indexOfLastElement] = data.id ?\n                PathService.breadcrumbs().client(data.id, data.shortName) :\n                PathService.breadcrumbs().newClient()\n            setBreadcrumbItems(breadcrumbItemsCopy)\n        }\n    }\n\n    return (\n        <DefaultPage title={title}\n                     icon={faWallet}\n                     breadcrumbItems={breadcrumbItems}>\n            <div className=\"client-details\">\n                {getData ? (\n                        <WithDataWrapper\n                            getData={getData}\n                            onMount={onViewMounted}\n                            Component={ClientDetailsForm}\n                        />\n                    ) :\n                    <ClientDetailsForm\n                        data={undefined}\n                        onMount={onViewMounted}\n                    />\n                }\n            </div>\n        </DefaultPage>\n    )\n}\n\nexport default ClientDetails","export const defaultErrorHandler = (error, handler) => {\n    console.error(error);\n\n    if (handler) {\n        handler.call();\n    }\n};","import React, {useCallback, useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport AppService from \"../../services/App/AppService\";\nimport ToolBar from \"../ToolBar/ToolBar/ToolBar\";\nimport {Router} from \"react-router-dom\";\nimport {UserDetailsContext} from \"../../contexts/UserDetailsContext\"\nimport DefaultPage from \"../DefaultPage/DefaultPage\";\nimport Panel from \"../Panel/Panel\";\nimport AuthService from \"../../services/Auth/AuthService\";\nimport Auth from \"../../services/Auth/AuthService\";\nimport RouteWrapper from \"../RouteWrapper/RouteWrapper\";\nimport PathService from \"../../services/Path/PathService\";\nimport LoginForm from \"../LoginForm/LoginForm\";\nimport ClientsPage from \"../ClientsPage/ClientsPage\";\nimport ApiService from \"../../services/Api/ApiService\";\nimport {APP_NAME, CLIENT_VERSION} from \"../../config/config\";\nimport HomePage from \"../HomePage/HomePage\";\nimport ClientDetails from \"../ClientDetails/ClientDetails\";\nimport RoleService from \"../../services/Role/RoleService\";\nimport {PathServiceContext} from \"../../contexts/PathServiceContext\";\nimport {faBox, faCalendarAlt, faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport history from \"../../history\";\nimport {defaultErrorHandler} from \"../../handlers/errorHandlers\";\n\nconst App = () => {\n\n    const [userDetails, setUserDetails] = useState(AppService.getInitialUserDetails());\n    const [isLoginRequestSending, setLoginRequestSending] = useState(false);\n\n    const checkAuth = useCallback(() => {\n        if (isLoginRequestSending) {\n            return\n        }\n\n        setLoginRequestSending(true)\n\n        const setDetails = (role, isAuthenticated, id = null) => {\n            let userDetailsDelta = {}\n\n            if (userDetails.id !== id) {\n                userDetailsDelta.id = id\n            }\n\n            if (userDetails.role !== role) {\n                userDetailsDelta.role = role\n            }\n\n            if (userDetails.isAuthenticated !== isAuthenticated) {\n                userDetailsDelta.isAuthenticated = isAuthenticated\n            }\n\n            if (userDetailsDelta.role || userDetailsDelta.isAuthenticated) {\n                setUserDetails({...userDetails, ...userDetailsDelta})\n            }\n        }\n\n        const onError = (e = {}) => {\n            setDetails(RoleService.anonymous(), false)\n            console.error('There has been a problem with your fetch operation: ', e.message);\n        }\n\n        if (AuthService.checkIsTokenExists()) {\n            AuthService.checkAuthEndpoint()\n                .then(() => {\n                    ApiService.getCurrentUserId()\n                        .then(({id}) => setDetails(AuthService.getCurrentRole(), true, id))\n                        .catch(onError)\n                })\n                .catch(onError)\n        } else {\n            onError()\n            setDetails(RoleService.anonymous(), false)\n        }\n        setLoginRequestSending(false)\n    }, [isLoginRequestSending, userDetails])\n\n\n    useEffect(() => {\n        checkAuth()\n    }, [checkAuth])\n\n    const onLoginFormInputChange = ({target}) => {\n        const newUserDetails = {...userDetails}\n        newUserDetails[target.name] = target.value\n        setUserDetails(newUserDetails)\n    }\n\n    const onLoginFormSubmit = (event) => {\n        event.preventDefault()\n        AuthService.login(userDetails)\n            .then(resp => resp.json()\n                .then(json => {\n                    Auth.writeToken(json);\n                    history.push(PathService.home())\n                    checkAuth()\n                })\n                .catch(console.error))\n            .catch(defaultErrorHandler);\n\n    }\n\n    const onLogout = () => {\n        AuthService.removeToken();\n        setUserDetails(AppService.getInitialUserDetails())\n    };\n\n    const filterClients = (dataArr) => {\n        return dataArr.sort((a, b) => {\n            if (a.shortName > b.shortName) {\n                return 1;\n            }\n            if (a.shortName < b.shortName) {\n                return -1;\n            }\n\n            return 0;\n        })\n    }\n\n    return (\n        <div className=\"app\">\n            <PathServiceContext.Provider value={PathService}>\n                <UserDetailsContext.Provider value={{...userDetails, password: undefined}}>\n                    <Router history={history}>\n\n                        <ToolBar {...AppService.getToolBarProps(\n                            userDetails,\n                            {\n                                name: APP_NAME,\n                                version: CLIENT_VERSION\n                            },\n                            onLogout,\n                        )}/>\n\n                        <Panel>\n                            <RouteWrapper path={PathService.login()}\n                                          roles={PathService.roles().login()}>\n                                <LoginForm\n                                    title=\"Авторизация\"\n                                    userDetails={userDetails}\n                                    onSubmit={onLoginFormSubmit}\n                                    onInputChange={onLoginFormInputChange}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.home()}\n                                          roles={PathService.roles().home()}>\n                                <HomePage\n                                    title=\"Главная\"/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.newClient()}\n                                          roles={PathService.roles().newClient()}>\n                                <ClientDetails\n                                    title=\"Новый клиент\"\n                                    getData={null}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper exact path={PathService.clients()}\n                                          roles={PathService.roles().clients()}>\n                                <ClientsPage\n                                    title=\"Клиенты\"\n                                    getData={ApiService.getClients}\n                                    filterData={filterClients}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.client()}\n                                          roles={PathService.roles().client()}>\n                                <ClientDetails getData={ApiService.getClient}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.operations()}\n                                          roles={PathService.roles().operations()}>\n                                <DefaultPage\n                                    title=\"Операции\"\n                                    icon={faBox}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().operations()\n                                    ]}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.workers()}\n                                          roles={PathService.roles().workers()}>\n                                <DefaultPage\n                                    title=\"Календарь\"\n                                    icon={faCalendarAlt}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().calendar()\n                                    ]}/>\n                            </RouteWrapper>\n\n                            <RouteWrapper path={PathService.settings()}\n                                          roles={PathService.roles().settings()}>\n                                <DefaultPage\n                                    title=\"Настройки\"\n                                    icon={faCog}\n                                    breadcrumbItems={[\n                                        PathService.breadcrumbs().home(),\n                                        PathService.breadcrumbs().settings()\n                                    ]}/>\n                            </RouteWrapper>\n\n                        </Panel>\n\n                    </Router>\n                </UserDetailsContext.Provider>\n            </PathServiceContext.Provider>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './css/bootstrap.min.css'\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/Dual Ball-0.9s-200px.248c6acf.svg\";"],"sourceRoot":""}